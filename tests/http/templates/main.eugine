(struct Template "HTML Templates"
	[::site-name := Config::site-name]
	[::make-header := (lambda (context title)
		(join-string (~include "header.html") "")
	)]

    [::build-submissions-list := (lambda (posts start)
        (var table clone "<div class='lister fat'>")
        (var zebra false)
        (var length len posts)

        (roop posts [(post i) =>
            (var title post::title)
            (var id post::id)
            (var no + (- length i) start)

            (if [post::state == "deleted"] 
                (set title "<span deleted>deleted</span>"))

            (+. table
"<div class='item item-" (str (set zebra (not zebra))) "' id='item-" id "'>
<div class='inner-item'>
    <div class='title'>
        <b onclick='location.href=\"/item/" id "\"'>" (str no) "</b>. <a href='/item/" id "'>" title "</a>"
        (if [post::state == "locked"] "<span locked>locked</span>")
    "</div>
    <div class='info'>#" post::id
        (if [post::comments > 0] 
            (+ " | " post::comments " 回复 (" (pretty-date post::commented-ts) "前)"))
            " | <span points inline>" post::points "</span> pt | 
            <a href='/user/" post::author "'>" post::author "</a> 发表于 " (pretty-date post::created-ts) "前 | 
            <a grey class='hider' href='javascript:hide(" id ")' state='un-hide'>隐藏</a>
    </div>
</div>
</div>")
        ])
        (+. table "</div>")
        (table)
    )]

    [::build-linear-comments-list := (lambda (posts start)
        (var table clone "<div class='lister fat'>")
        (var zebra false)

        (roop posts [(post i) =>
            (var title post::title)
            (var id post::id)

            (if [post::state == "deleted"] 
                (set title "<span deleted>deleted</span>"))

            (+. table
"<div class='item item-" (str (set zebra (not zebra))) "' id='item-" id "'>
<div class='inner-item'>
    <div class='title'>" 
        title 
        (if [post::state == "locked"] "<span locked>locked</span>")
    "</div>
    <div class='info'>#" id " | <span points inline>" post::points "</span> pt | 
        <a href='/user/" post::author "'>" post::author "</a> 发表于 " (pretty-date post::created-ts) "前 | 
        <a grey href='/item/" post::root "#item-" post::parent "'>父主题</a> | 
        <a grey href='/item/" post::root "#item-" id "'>根主题</a> | 
        <a grey class='hider' href='javascript:hide(" id ")' state='un-hide'>隐藏</a>
    </div>
</div>
</div>")
        ])
        (+. table "</div>")
        (table)
    )]

    [::build-favorites-list := (lambda (posts start)
        (var table clone "<div class='lister fat'>")
        (var zebra false)

        (loop posts [(post i) =>
            (var title post::title)
            (var id post::id)

            (if [post::state == "deleted"] 
                (set title "<span deleted>deleted</span>"))

            (+. table
"<div class='item item-" (str (set zebra (not zebra))) "' id='item-" id "'>
<div class='inner-item'>
    <div class='title'>" title "</div>
    <div class='info'>#" id " | <span points inline>" post::points "</span> pt | 
        <a href='/user/" post::author "'>" post::author "</a> 发表于 " (pretty-date post::created-ts) "前 | 
        <a grey href='/item/" id "'>查看</a> | 
        <a grey class='fave' fave-id='" id "' href='/fave/" id "'>收藏</a>
    </div>
</div>
</div>")
        ])
        (+. table "</div>")
        (table)
    )]

    [::build-comments-list := (lambda (posts)
        (var table clone "<div class='lister'>")
        (var zebra false)
        (var length len posts)
        (var level 0)
        (var stack (list))

        (loop posts [(post i) =>
            (var title post::title)
            (var id post::id)

            (if [post::state == "deleted"] 
                (set title ""))

            (if [post::state == "pop"]
                {
                    (+. table "</div>")
                    (-- level)
                } {
                    (+. table
    "<div class='item item-" (str (set zebra (not zebra))) "' 
        id='item-" id "'
        level='" (str level) "'>
        <div class='inner-item' style='margin-left: " (str (* level 30)) "px'>
            <table><tr><td class='vote-area'>
                <div title='赞成' class='unvote' upvote onclick='sayaye(" id ")'>&#9650;</div>
                <span points>" post::points "</span>
                <div title='反对' class='unvote' downvote onclick='sayno(" id ")'>&#9660;</div>
            </td><td>
            <div class='info2'>#" post::id " | "
                "<a href='/user/" post::author "'>" post::author "</a> 发表于 " (pretty-date post::created-ts) "前
                <a class='folder' href='javascript:fold(" id ")'>-</a>
            </div>
            <div class='title'>" 
                title
            "</div>
            <div class='info'><span class='reply'>"
            (cond post::state
            	("locked" "<span comment locked>locked</span>")
            	("deleted" "<span deleted>deleted</span>")
            	(_ (+ "<a grey href='/item/" id "'>回复</a>"))) " | </span>
                <a grey class='hider' state='un-hide' href='javascript:hide(" id ")'>隐藏</a>
            </div></td></tr></table>
        </div>")
                    (++ level)
                })
        ])
        (+. table "</div>")
        (table)
    )]

    [::build-pager := (lambda (start size)
        (var ppp Config::posts-per-page)
        (var prev - (/ start ppp) 1)
        (var next + (/ start ppp) 1)
        (var ret "<div class='banner'>")
        
        (if [prev >= 0]
            (set ret + ret "<a class='nav' href='?after=" (str prev) "'>&laquo; 上一页</a>"))

        (set ret + ret "<a class='nav' href='?after=" (str next) "'>下一页 &raquo;</a>")

        (+ ret "</div>")
    )]

    [::item := (lambda (context item comments)
        (var item-id (str item::id))
        (var item-page (join-string (~include "item.html") ""))
        (var footer (join-string (~include "footer.html") ""))

        (var aye-items (list))
        (var no-items (list))
        (if context::is-logged-in (loop item::aye-users [(user) =>
            (if (starts-with user context::username) (+. aye-items (+ "\"" user "\"")))
        ]))
        (if context::is-logged-in (loop item::no-users [(user) =>
            (if (starts-with user context::username) (+. no-items (+ "\"" user "\"")))
        ]))

        (var path + (get-post-path item::id) "/comments-cache." cache-token)
        (var built read-file path)

        (if [(len comments) == 0] (set built ""))
        (if [built == null] (write-file path (set built ::build-comments-list comments)))

        (+ (::make-header context (if [item::title == "Comment"] "回复" item::title)) item-page built (sprintf 
        	"<script type='text/javascript'>window.ayeItems = [%s]; window.noItems = [%s];</script>"
            (join-string aye-items ",") (join-string no-items ",")) footer)
    )]

	[::submit := (lambda (context)
        (var submit (join-string (~include "submit.html") ""))
        (var footer (join-string (~include "footer.html") ""))

        (+ (::make-header context "发表主题") submit footer)
     )]

	[::login := (lambda (context)
        (var login (join-string (~include "login.html") ""))
        (var footer (join-string (~include "footer.html") ""))

        (+ (::make-header context "登入") login footer)
    )]

	[::welcome := (lambda (context)
        (var footer (join-string (~include "footer.html") ""))

        (+ (::make-header context "Welcome") (sprintf 
            "<div class='welcome'>欢迎 %s! 返回<a href='/'>首页</a></div>"
            context::username) footer)
    )]

    [::member-info := (lambda (context user-data)
        (var sign-up (num [user-data : UserOp::SIGN_UP_TS]))
        (var age / [(time 1) - sign-up] 86400000)
        (var username [user-data : UserOp::USERNAME])
        (var member-info (join-string (~include "member.html") ""))
        (var footer (join-string (~include "footer.html") ""))

        (+ (::make-header context username) member-info footer)
    )]

    [::user-info := (lambda (context user-data)
        (var sign-up (num [user-data : UserOp::SIGN_UP_TS]))
        (var age / [(time 1) - sign-up] 86400000)
        (var user-info (join-string (~include "user.html") ""))
        (var footer (join-string (~include "footer.html") ""))

        (+ (::make-header context "用户") user-info footer)
    )]

    [::lister := (lambda (context path show-deleted page-title start ctype)
        (if [ctype == "fave"]
            (var posts load-index-list path start)
            (var posts load-list path start show-deleted))

        (cond path
            ("main" (var cache-file + ~path "data/posts/timeline-cache"))
            ("rank" (var cache-file + ~path "data/posts/ranking-cache"))
            (_      (var cache-file null)))

        (set cache-file + cache-file "-" (str show-deleted) "-" (str (/ start Config::posts-per-page)) "." cache-token)

        (var list-page (join-string (~include "list.html") ""))
        (var footer (join-string (~include "footer.html") ""))

        (if [cache-file == null] (set cache-file ""))

        (var content read-file cache-file)
        (if [content == null]
            (write-file cache-file (cond ctype
                ("sub"  (set content ::build-submissions-list posts start))
                ("fave" (set content ::build-favorites-list posts start))
                (_      (set content ::build-linear-comments-list posts start))
            )))

        (+ (::make-header context page-title) (sprintf list-page content "" "") footer)
    )]

    [::leaders := (lambda (context leaders)
        (var footer (join-string (~include "footer.html") ""))
        (var table clone "<div class='welcome'>每天更新</div><hr>
            <table class='lister leaders'>
            <tr class='item-true'><td></td><th>用户</th><th>karma</th></tr>")
        (var zebra true)

        (loop leaders [(leader i) =>
            (+. table
"<tr class='item-" (str (set zebra (not zebra))) "'>
    <td><b>" (str (+ i 1)) "</b>.</td>
    <td><a href='/user/" leader::username "'>" leader::username "</a></td>
    <td>" leader::karma "</td>
</tr>")
        ])
        (+. table "</table>")
        (+ (::make-header context "用户排名") table footer)
    )]

    [::error := (lambda (context text)
        (var footer (join-string (~include "footer.html") ""))

        (+ (::make-header context "错误") "<div class='error' onclick='history.go(-1)'>" 
            text "</div>" footer)
    )]
)