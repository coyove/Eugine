import Utils
import HttpServer
import Template

(def Config() => {
    var this.port = 8080
    var this.socketReadTimeout = 5000

    var this.siteName = "Test Site"
    var this.salt = "test salt"

    var this.openPost = false
})()

var server = HttpServer("127.0.0.1", Config.port, Config.socketReadTimeout)

def errorHandler(ctx, msg) => {
	ctx.writeCommon(200, "html")
    ctx.eoh()
    ctx.write(Template.error(msg))
}

server.addRouter("GET", "_/", (context) => {
    context.writeCommon(200, "html")
    context.eoh()
    context.write(Template.index())
})

server.addRouter("POST", "_/new", (context) => enter {
	var uid = context.cookies.uid
	var name = Cookie.get(uid)

	if !name
		if Config.openPost {
			uid = Cookie.newCookie()
			name = Cookie.get(uid)
		} else 
			exit(1)

    context.writeCommon(302, "html")
    context.writeHeader("Location", "/")
    context.writeCookie("uid", uid, { Expires: 86400 * 365 })
    context.eoh()

    for context.postParams do (k) =>
        println(k, "=", context.postParams[k])
} catch (e) {
	switch __e__ do {
		1 => errorHandler(context, "无效cookie")
	}
})

// var _start = Time.unix(0)
// var zzz = clone ""
// for 0..100 do () => {
// 	for 0..100 do () => zzz <+ "a"
// }
// println(Time.unix(0) - _start)
// println(len(zzz))
println("listening on port ", Config.port)
server.start()