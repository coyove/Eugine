// Generated from Eugine.g by ANTLR 4.5.3

package org.coyove.eugine.antlr;

import org.coyove.eugine.util.*;
import org.coyove.eugine.base.*;
import org.coyove.eugine.value.*;
import org.coyove.eugine.core.*;
import org.coyove.eugine.library.*;
import org.coyove.eugine.parser.Atom;
import java.util.HashMap;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class EugineLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, Var=27, Def=28, For=29, If=30, Else=31, Enter=32, 
		Catch=33, Clone=34, Do=35, Add=36, Sub=37, Not=38, AryOp=39, Integer=40, 
		Double=41, NEWLINE=42, WS=43, Semi=44, Identifier=45, Letter=46, BlockComment=47, 
		LineComment=48, RawString=49, StringLiteral=50;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "Var", "Def", "For", "If", "Else", "Enter", "Catch", "Clone", 
		"Do", "Add", "Sub", "Not", "AryOp", "Integer", "Double", "NEWLINE", "WS", 
		"Semi", "Identifier", "Letter", "BlockComment", "LineComment", "RawString", 
		"StringLiteral", "SCharSequence", "SChar"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'{'", "'}'", "'import'", "'.'", "'('", "')'", "'='", "','", "'=>'", 
		"':'", "'['", "']'", "'*'", "'/'", "'%'", "'+.'", "'<'", "'>'", "'<='", 
		"'>='", "'=='", "'!='", "'&&'", "'||'", "'..'", "'...'", "'var'", "'def'", 
		null, "'if'", "'else'", "'enter'", "'catch'", "'clone'", "'do'", "'+'", 
		"'-'", "'!'", null, null, null, null, null, "';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, "Var", "Def", "For", "If", "Else", "Enter", "Catch", 
		"Clone", "Do", "Add", "Sub", "Not", "AryOp", "Integer", "Double", "NEWLINE", 
		"WS", "Semi", "Identifier", "Letter", "BlockComment", "LineComment", "RawString", 
		"StringLiteral"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public EugineLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Eugine.g"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\64\u0172\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3"+
		"\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3"+
		"\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3"+
		"\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3"+
		"\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3"+
		"\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\5\36\u00bf\n\36"+
		"\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3"+
		"\"\3#\3#\3#\3#\3#\3#\3$\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3(\3(\3(\3"+
		"(\3(\3(\3(\5(\u00ee\n(\3)\6)\u00f1\n)\r)\16)\u00f2\3*\6*\u00f6\n*\r*\16"+
		"*\u00f7\3*\3*\6*\u00fc\n*\r*\16*\u00fd\3*\6*\u0101\n*\r*\16*\u0102\3*"+
		"\3*\6*\u0107\n*\r*\16*\u0108\3*\3*\5*\u010d\n*\3*\6*\u0110\n*\r*\16*\u0111"+
		"\5*\u0114\n*\3+\5+\u0117\n+\3+\3+\3+\3+\3,\6,\u011e\n,\r,\16,\u011f\3"+
		",\3,\3-\3-\3.\3.\5.\u0128\n.\3.\3.\7.\u012c\n.\f.\16.\u012f\13.\3.\3."+
		"\3.\5.\u0134\n.\3/\3/\3\60\3\60\3\60\3\60\7\60\u013c\n\60\f\60\16\60\u013f"+
		"\13\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\7\61\u014a\n\61\f"+
		"\61\16\61\u014d\13\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\7\62\u0157"+
		"\n\62\f\62\16\62\u015a\13\62\3\62\3\62\3\63\3\63\5\63\u0160\n\63\3\63"+
		"\3\63\3\64\6\64\u0165\n\64\r\64\16\64\u0166\3\65\3\65\3\65\3\65\3\65\3"+
		"\65\3\65\3\65\5\65\u0171\n\65\3\u013d\2\66\3\3\5\4\7\5\t\6\13\7\r\b\17"+
		"\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+"+
		"\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+"+
		"U,W-Y.[/]\60_\61a\62c\63e\64g\2i\2\3\2\16\6\2\'\',,//\61\61\4\2>>@@\3"+
		"\2\62;\4\2GGgg\5\2--//^^\4\2\13\13\"\"\4\2\62;aa\4\2C\\c|\4\2\f\f\17\17"+
		"\3\2$$\6\2\f\f\17\17$$^^\f\2$$))AA^^cdhhppttvvxx\u018c\2\3\3\2\2\2\2\5"+
		"\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2"+
		"\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33"+
		"\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2"+
		"\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2"+
		"\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2"+
		"\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K"+
		"\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2"+
		"\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2"+
		"\2e\3\2\2\2\3k\3\2\2\2\5m\3\2\2\2\7o\3\2\2\2\tv\3\2\2\2\13x\3\2\2\2\r"+
		"z\3\2\2\2\17|\3\2\2\2\21~\3\2\2\2\23\u0080\3\2\2\2\25\u0083\3\2\2\2\27"+
		"\u0085\3\2\2\2\31\u0087\3\2\2\2\33\u0089\3\2\2\2\35\u008b\3\2\2\2\37\u008d"+
		"\3\2\2\2!\u008f\3\2\2\2#\u0092\3\2\2\2%\u0094\3\2\2\2\'\u0096\3\2\2\2"+
		")\u0099\3\2\2\2+\u009c\3\2\2\2-\u009f\3\2\2\2/\u00a2\3\2\2\2\61\u00a5"+
		"\3\2\2\2\63\u00a8\3\2\2\2\65\u00ab\3\2\2\2\67\u00af\3\2\2\29\u00b3\3\2"+
		"\2\2;\u00be\3\2\2\2=\u00c0\3\2\2\2?\u00c3\3\2\2\2A\u00c8\3\2\2\2C\u00ce"+
		"\3\2\2\2E\u00d4\3\2\2\2G\u00da\3\2\2\2I\u00dd\3\2\2\2K\u00df\3\2\2\2M"+
		"\u00e1\3\2\2\2O\u00ed\3\2\2\2Q\u00f0\3\2\2\2S\u0113\3\2\2\2U\u0116\3\2"+
		"\2\2W\u011d\3\2\2\2Y\u0123\3\2\2\2[\u0127\3\2\2\2]\u0135\3\2\2\2_\u0137"+
		"\3\2\2\2a\u0145\3\2\2\2c\u0150\3\2\2\2e\u015d\3\2\2\2g\u0164\3\2\2\2i"+
		"\u0170\3\2\2\2kl\7}\2\2l\4\3\2\2\2mn\7\177\2\2n\6\3\2\2\2op\7k\2\2pq\7"+
		"o\2\2qr\7r\2\2rs\7q\2\2st\7t\2\2tu\7v\2\2u\b\3\2\2\2vw\7\60\2\2w\n\3\2"+
		"\2\2xy\7*\2\2y\f\3\2\2\2z{\7+\2\2{\16\3\2\2\2|}\7?\2\2}\20\3\2\2\2~\177"+
		"\7.\2\2\177\22\3\2\2\2\u0080\u0081\7?\2\2\u0081\u0082\7@\2\2\u0082\24"+
		"\3\2\2\2\u0083\u0084\7<\2\2\u0084\26\3\2\2\2\u0085\u0086\7]\2\2\u0086"+
		"\30\3\2\2\2\u0087\u0088\7_\2\2\u0088\32\3\2\2\2\u0089\u008a\7,\2\2\u008a"+
		"\34\3\2\2\2\u008b\u008c\7\61\2\2\u008c\36\3\2\2\2\u008d\u008e\7\'\2\2"+
		"\u008e \3\2\2\2\u008f\u0090\7-\2\2\u0090\u0091\7\60\2\2\u0091\"\3\2\2"+
		"\2\u0092\u0093\7>\2\2\u0093$\3\2\2\2\u0094\u0095\7@\2\2\u0095&\3\2\2\2"+
		"\u0096\u0097\7>\2\2\u0097\u0098\7?\2\2\u0098(\3\2\2\2\u0099\u009a\7@\2"+
		"\2\u009a\u009b\7?\2\2\u009b*\3\2\2\2\u009c\u009d\7?\2\2\u009d\u009e\7"+
		"?\2\2\u009e,\3\2\2\2\u009f\u00a0\7#\2\2\u00a0\u00a1\7?\2\2\u00a1.\3\2"+
		"\2\2\u00a2\u00a3\7(\2\2\u00a3\u00a4\7(\2\2\u00a4\60\3\2\2\2\u00a5\u00a6"+
		"\7~\2\2\u00a6\u00a7\7~\2\2\u00a7\62\3\2\2\2\u00a8\u00a9\7\60\2\2\u00a9"+
		"\u00aa\7\60\2\2\u00aa\64\3\2\2\2\u00ab\u00ac\7\60\2\2\u00ac\u00ad\7\60"+
		"\2\2\u00ad\u00ae\7\60\2\2\u00ae\66\3\2\2\2\u00af\u00b0\7x\2\2\u00b0\u00b1"+
		"\7c\2\2\u00b1\u00b2\7t\2\2\u00b28\3\2\2\2\u00b3\u00b4\7f\2\2\u00b4\u00b5"+
		"\7g\2\2\u00b5\u00b6\7h\2\2\u00b6:\3\2\2\2\u00b7\u00b8\7h\2\2\u00b8\u00b9"+
		"\7q\2\2\u00b9\u00bf\7t\2\2\u00ba\u00bb\7h\2\2\u00bb\u00bc\7q\2\2\u00bc"+
		"\u00bd\7t\2\2\u00bd\u00bf\7t\2\2\u00be\u00b7\3\2\2\2\u00be\u00ba\3\2\2"+
		"\2\u00bf<\3\2\2\2\u00c0\u00c1\7k\2\2\u00c1\u00c2\7h\2\2\u00c2>\3\2\2\2"+
		"\u00c3\u00c4\7g\2\2\u00c4\u00c5\7n\2\2\u00c5\u00c6\7u\2\2\u00c6\u00c7"+
		"\7g\2\2\u00c7@\3\2\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca\7p\2\2\u00ca\u00cb"+
		"\7v\2\2\u00cb\u00cc\7g\2\2\u00cc\u00cd\7t\2\2\u00cdB\3\2\2\2\u00ce\u00cf"+
		"\7e\2\2\u00cf\u00d0\7c\2\2\u00d0\u00d1\7v\2\2\u00d1\u00d2\7e\2\2\u00d2"+
		"\u00d3\7j\2\2\u00d3D\3\2\2\2\u00d4\u00d5\7e\2\2\u00d5\u00d6\7n\2\2\u00d6"+
		"\u00d7\7q\2\2\u00d7\u00d8\7p\2\2\u00d8\u00d9\7g\2\2\u00d9F\3\2\2\2\u00da"+
		"\u00db\7f\2\2\u00db\u00dc\7q\2\2\u00dcH\3\2\2\2\u00dd\u00de\7-\2\2\u00de"+
		"J\3\2\2\2\u00df\u00e0\7/\2\2\u00e0L\3\2\2\2\u00e1\u00e2\7#\2\2\u00e2N"+
		"\3\2\2\2\u00e3\u00ee\t\2\2\2\u00e4\u00e5\7?\2\2\u00e5\u00ee\7?\2\2\u00e6"+
		"\u00e7\7#\2\2\u00e7\u00ee\7?\2\2\u00e8\u00ee\t\3\2\2\u00e9\u00ea\7@\2"+
		"\2\u00ea\u00ee\7?\2\2\u00eb\u00ec\7>\2\2\u00ec\u00ee\7?\2\2\u00ed\u00e3"+
		"\3\2\2\2\u00ed\u00e4\3\2\2\2\u00ed\u00e6\3\2\2\2\u00ed\u00e8\3\2\2\2\u00ed"+
		"\u00e9\3\2\2\2\u00ed\u00eb\3\2\2\2\u00eeP\3\2\2\2\u00ef\u00f1\t\4\2\2"+
		"\u00f0\u00ef\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f2\u00f0\3\2\2\2\u00f2\u00f3"+
		"\3\2\2\2\u00f3R\3\2\2\2\u00f4\u00f6\t\4\2\2\u00f5\u00f4\3\2\2\2\u00f6"+
		"\u00f7\3\2\2\2\u00f7\u00f5\3\2\2\2\u00f7\u00f8\3\2\2\2\u00f8\u00f9\3\2"+
		"\2\2\u00f9\u00fb\7\60\2\2\u00fa\u00fc\t\4\2\2\u00fb\u00fa\3\2\2\2\u00fc"+
		"\u00fd\3\2\2\2\u00fd\u00fb\3\2\2\2\u00fd\u00fe\3\2\2\2\u00fe\u0114\3\2"+
		"\2\2\u00ff\u0101\t\4\2\2\u0100\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102"+
		"\u0100\3\2\2\2\u0102\u0103\3\2\2\2\u0103\u0104\3\2\2\2\u0104\u0106\7\60"+
		"\2\2\u0105\u0107\t\4\2\2\u0106\u0105\3\2\2\2\u0107\u0108\3\2\2\2\u0108"+
		"\u0106\3\2\2\2\u0108\u0109\3\2\2\2\u0109\u010a\3\2\2\2\u010a\u010c\t\5"+
		"\2\2\u010b\u010d\t\6\2\2\u010c\u010b\3\2\2\2\u010c\u010d\3\2\2\2\u010d"+
		"\u010f\3\2\2\2\u010e\u0110\t\4\2\2\u010f\u010e\3\2\2\2\u0110\u0111\3\2"+
		"\2\2\u0111\u010f\3\2\2\2\u0111\u0112\3\2\2\2\u0112\u0114\3\2\2\2\u0113"+
		"\u00f5\3\2\2\2\u0113\u0100\3\2\2\2\u0114T\3\2\2\2\u0115\u0117\7\17\2\2"+
		"\u0116\u0115\3\2\2\2\u0116\u0117\3\2\2\2\u0117\u0118\3\2\2\2\u0118\u0119"+
		"\7\f\2\2\u0119\u011a\3\2\2\2\u011a\u011b\b+\2\2\u011bV\3\2\2\2\u011c\u011e"+
		"\t\7\2\2\u011d\u011c\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u011d\3\2\2\2\u011f"+
		"\u0120\3\2\2\2\u0120\u0121\3\2\2\2\u0121\u0122\b,\2\2\u0122X\3\2\2\2\u0123"+
		"\u0124\7=\2\2\u0124Z\3\2\2\2\u0125\u0128\5]/\2\u0126\u0128\7a\2\2\u0127"+
		"\u0125\3\2\2\2\u0127\u0126\3\2\2\2\u0128\u012d\3\2\2\2\u0129\u012c\5]"+
		"/\2\u012a\u012c\t\b\2\2\u012b\u0129\3\2\2\2\u012b\u012a\3\2\2\2\u012c"+
		"\u012f\3\2\2\2\u012d\u012b\3\2\2\2\u012d\u012e\3\2\2\2\u012e\u0133\3\2"+
		"\2\2\u012f\u012d\3\2\2\2\u0130\u0131\7\60\2\2\u0131\u0132\7\60\2\2\u0132"+
		"\u0134\7\60\2\2\u0133\u0130\3\2\2\2\u0133\u0134\3\2\2\2\u0134\\\3\2\2"+
		"\2\u0135\u0136\t\t\2\2\u0136^\3\2\2\2\u0137\u0138\7\61\2\2\u0138\u0139"+
		"\7,\2\2\u0139\u013d\3\2\2\2\u013a\u013c\13\2\2\2\u013b\u013a\3\2\2\2\u013c"+
		"\u013f\3\2\2\2\u013d\u013e\3\2\2\2\u013d\u013b\3\2\2\2\u013e\u0140\3\2"+
		"\2\2\u013f\u013d\3\2\2\2\u0140\u0141\7,\2\2\u0141\u0142\7\61\2\2\u0142"+
		"\u0143\3\2\2\2\u0143\u0144\b\60\2\2\u0144`\3\2\2\2\u0145\u0146\7\61\2"+
		"\2\u0146\u0147\7\61\2\2\u0147\u014b\3\2\2\2\u0148\u014a\n\n\2\2\u0149"+
		"\u0148\3\2\2\2\u014a\u014d\3\2\2\2\u014b\u0149\3\2\2\2\u014b\u014c\3\2"+
		"\2\2\u014c\u014e\3\2\2\2\u014d\u014b\3\2\2\2\u014e\u014f\b\61\2\2\u014f"+
		"b\3\2\2\2\u0150\u0151\7B\2\2\u0151\u0152\7$\2\2\u0152\u0158\3\2\2\2\u0153"+
		"\u0157\n\13\2\2\u0154\u0155\7$\2\2\u0155\u0157\7$\2\2\u0156\u0153\3\2"+
		"\2\2\u0156\u0154\3\2\2\2\u0157\u015a\3\2\2\2\u0158\u0156\3\2\2\2\u0158"+
		"\u0159\3\2\2\2\u0159\u015b\3\2\2\2\u015a\u0158\3\2\2\2\u015b\u015c\7$"+
		"\2\2\u015cd\3\2\2\2\u015d\u015f\7$\2\2\u015e\u0160\5g\64\2\u015f\u015e"+
		"\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u0161\3\2\2\2\u0161\u0162\7$\2\2\u0162"+
		"f\3\2\2\2\u0163\u0165\5i\65\2\u0164\u0163\3\2\2\2\u0165\u0166\3\2\2\2"+
		"\u0166\u0164\3\2\2\2\u0166\u0167\3\2\2\2\u0167h\3\2\2\2\u0168\u0171\n"+
		"\f\2\2\u0169\u016a\7^\2\2\u016a\u0171\t\r\2\2\u016b\u016c\7^\2\2\u016c"+
		"\u0171\7\f\2\2\u016d\u016e\7^\2\2\u016e\u016f\7\17\2\2\u016f\u0171\7\f"+
		"\2\2\u0170\u0168\3\2\2\2\u0170\u0169\3\2\2\2\u0170\u016b\3\2\2\2\u0170"+
		"\u016d\3\2\2\2\u0171j\3\2\2\2\32\2\u00be\u00ed\u00f2\u00f7\u00fd\u0102"+
		"\u0108\u010c\u0111\u0113\u0116\u011f\u0127\u012b\u012d\u0133\u013d\u014b"+
		"\u0156\u0158\u015f\u0166\u0170\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}