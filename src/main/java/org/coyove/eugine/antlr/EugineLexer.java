// Generated from Eugine.g by ANTLR 4.5.3

package org.coyove.eugine.antlr;

import org.coyove.eugine.util.*;
import org.coyove.eugine.base.*;
import org.coyove.eugine.value.*;
import org.coyove.eugine.core.*;
import org.coyove.eugine.library.*;
import org.coyove.eugine.parser.Atom;
import java.util.HashMap;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class EugineLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, Var=33, Def=34, For=35, If=36, Switch=37, Else=38, Enter=39, 
		Catch=40, Clone=41, Do=42, Add=43, Sub=44, Not=45, AryOp=46, Integer=47, 
		Double=48, NEWLINE=49, WS=50, Semi=51, Identifier=52, Letter=53, BlockComment=54, 
		LineComment=55, RawString=56, StringLiteral=57;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "Var", 
		"Def", "For", "If", "Switch", "Else", "Enter", "Catch", "Clone", "Do", 
		"Add", "Sub", "Not", "AryOp", "Integer", "Double", "NEWLINE", "WS", "Semi", 
		"Identifier", "Letter", "BlockComment", "LineComment", "RawString", "StringLiteral", 
		"SCharSequence", "SChar"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'{'", "'}'", "'import'", "'.'", "'('", "')'", "'='", "','", "'=>'", 
		"':'", "'['", "']'", "'++'", "'--'", "'*'", "'/'", "'%'", "'+.'", "'<'", 
		"'>'", "'<='", "'>='", "'=='", "'!='", "'&&'", "'||'", "'+='", "'-='", 
		"'*='", "'/='", "'..'", "'...'", "'var'", "'def'", null, "'if'", "'switch'", 
		"'else'", "'enter'", "'catch'", "'clone'", "'do'", "'+'", "'-'", "'!'", 
		null, null, null, null, null, "';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "Var", "Def", "For", 
		"If", "Switch", "Else", "Enter", "Catch", "Clone", "Do", "Add", "Sub", 
		"Not", "AryOp", "Integer", "Double", "NEWLINE", "WS", "Semi", "Identifier", 
		"Letter", "BlockComment", "LineComment", "RawString", "StringLiteral"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public EugineLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Eugine.g"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2;\u0199\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\3\2\3"+
		"\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b"+
		"\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\17\3\17"+
		"\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\25\3\25"+
		"\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32"+
		"\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37"+
		"\3\37\3\37\3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3"+
		"$\3$\3$\3$\5$\u00df\n$\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3"+
		"\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+\3,\3"+
		",\3-\3-\3.\3.\3/\3/\3/\3/\3/\3/\3/\3/\3/\3/\5/\u0115\n/\3\60\6\60\u0118"+
		"\n\60\r\60\16\60\u0119\3\61\6\61\u011d\n\61\r\61\16\61\u011e\3\61\3\61"+
		"\6\61\u0123\n\61\r\61\16\61\u0124\3\61\6\61\u0128\n\61\r\61\16\61\u0129"+
		"\3\61\3\61\6\61\u012e\n\61\r\61\16\61\u012f\3\61\3\61\5\61\u0134\n\61"+
		"\3\61\6\61\u0137\n\61\r\61\16\61\u0138\5\61\u013b\n\61\3\62\5\62\u013e"+
		"\n\62\3\62\3\62\3\62\3\62\3\63\6\63\u0145\n\63\r\63\16\63\u0146\3\63\3"+
		"\63\3\64\3\64\3\65\3\65\5\65\u014f\n\65\3\65\3\65\7\65\u0153\n\65\f\65"+
		"\16\65\u0156\13\65\3\65\3\65\3\65\5\65\u015b\n\65\3\66\3\66\3\67\3\67"+
		"\3\67\3\67\7\67\u0163\n\67\f\67\16\67\u0166\13\67\3\67\3\67\3\67\3\67"+
		"\3\67\38\38\38\38\78\u0171\n8\f8\168\u0174\138\38\38\39\39\39\39\39\3"+
		"9\79\u017e\n9\f9\169\u0181\139\39\39\3:\3:\5:\u0187\n:\3:\3:\3;\6;\u018c"+
		"\n;\r;\16;\u018d\3<\3<\3<\3<\3<\3<\3<\3<\5<\u0198\n<\3\u0164\2=\3\3\5"+
		"\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"+
		"!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!"+
		"A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s"+
		";u\2w\2\3\2\16\6\2\'\',,//\61\61\4\2>>@@\3\2\62;\4\2GGgg\5\2--//^^\4\2"+
		"\13\13\"\"\4\2\62;aa\4\2C\\c|\4\2\f\f\17\17\3\2$$\6\2\f\f\17\17$$^^\f"+
		"\2$$))AA^^cdhhppttvvxx\u01b3\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3"+
		"\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2"+
		"\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37"+
		"\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3"+
		"\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2"+
		"\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C"+
		"\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2"+
		"\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2"+
		"\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i"+
		"\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\3y\3\2"+
		"\2\2\5{\3\2\2\2\7}\3\2\2\2\t\u0084\3\2\2\2\13\u0086\3\2\2\2\r\u0088\3"+
		"\2\2\2\17\u008a\3\2\2\2\21\u008c\3\2\2\2\23\u008e\3\2\2\2\25\u0091\3\2"+
		"\2\2\27\u0093\3\2\2\2\31\u0095\3\2\2\2\33\u0097\3\2\2\2\35\u009a\3\2\2"+
		"\2\37\u009d\3\2\2\2!\u009f\3\2\2\2#\u00a1\3\2\2\2%\u00a3\3\2\2\2\'\u00a6"+
		"\3\2\2\2)\u00a8\3\2\2\2+\u00aa\3\2\2\2-\u00ad\3\2\2\2/\u00b0\3\2\2\2\61"+
		"\u00b3\3\2\2\2\63\u00b6\3\2\2\2\65\u00b9\3\2\2\2\67\u00bc\3\2\2\29\u00bf"+
		"\3\2\2\2;\u00c2\3\2\2\2=\u00c5\3\2\2\2?\u00c8\3\2\2\2A\u00cb\3\2\2\2C"+
		"\u00cf\3\2\2\2E\u00d3\3\2\2\2G\u00de\3\2\2\2I\u00e0\3\2\2\2K\u00e3\3\2"+
		"\2\2M\u00ea\3\2\2\2O\u00ef\3\2\2\2Q\u00f5\3\2\2\2S\u00fb\3\2\2\2U\u0101"+
		"\3\2\2\2W\u0104\3\2\2\2Y\u0106\3\2\2\2[\u0108\3\2\2\2]\u0114\3\2\2\2_"+
		"\u0117\3\2\2\2a\u013a\3\2\2\2c\u013d\3\2\2\2e\u0144\3\2\2\2g\u014a\3\2"+
		"\2\2i\u014e\3\2\2\2k\u015c\3\2\2\2m\u015e\3\2\2\2o\u016c\3\2\2\2q\u0177"+
		"\3\2\2\2s\u0184\3\2\2\2u\u018b\3\2\2\2w\u0197\3\2\2\2yz\7}\2\2z\4\3\2"+
		"\2\2{|\7\177\2\2|\6\3\2\2\2}~\7k\2\2~\177\7o\2\2\177\u0080\7r\2\2\u0080"+
		"\u0081\7q\2\2\u0081\u0082\7t\2\2\u0082\u0083\7v\2\2\u0083\b\3\2\2\2\u0084"+
		"\u0085\7\60\2\2\u0085\n\3\2\2\2\u0086\u0087\7*\2\2\u0087\f\3\2\2\2\u0088"+
		"\u0089\7+\2\2\u0089\16\3\2\2\2\u008a\u008b\7?\2\2\u008b\20\3\2\2\2\u008c"+
		"\u008d\7.\2\2\u008d\22\3\2\2\2\u008e\u008f\7?\2\2\u008f\u0090\7@\2\2\u0090"+
		"\24\3\2\2\2\u0091\u0092\7<\2\2\u0092\26\3\2\2\2\u0093\u0094\7]\2\2\u0094"+
		"\30\3\2\2\2\u0095\u0096\7_\2\2\u0096\32\3\2\2\2\u0097\u0098\7-\2\2\u0098"+
		"\u0099\7-\2\2\u0099\34\3\2\2\2\u009a\u009b\7/\2\2\u009b\u009c\7/\2\2\u009c"+
		"\36\3\2\2\2\u009d\u009e\7,\2\2\u009e \3\2\2\2\u009f\u00a0\7\61\2\2\u00a0"+
		"\"\3\2\2\2\u00a1\u00a2\7\'\2\2\u00a2$\3\2\2\2\u00a3\u00a4\7-\2\2\u00a4"+
		"\u00a5\7\60\2\2\u00a5&\3\2\2\2\u00a6\u00a7\7>\2\2\u00a7(\3\2\2\2\u00a8"+
		"\u00a9\7@\2\2\u00a9*\3\2\2\2\u00aa\u00ab\7>\2\2\u00ab\u00ac\7?\2\2\u00ac"+
		",\3\2\2\2\u00ad\u00ae\7@\2\2\u00ae\u00af\7?\2\2\u00af.\3\2\2\2\u00b0\u00b1"+
		"\7?\2\2\u00b1\u00b2\7?\2\2\u00b2\60\3\2\2\2\u00b3\u00b4\7#\2\2\u00b4\u00b5"+
		"\7?\2\2\u00b5\62\3\2\2\2\u00b6\u00b7\7(\2\2\u00b7\u00b8\7(\2\2\u00b8\64"+
		"\3\2\2\2\u00b9\u00ba\7~\2\2\u00ba\u00bb\7~\2\2\u00bb\66\3\2\2\2\u00bc"+
		"\u00bd\7-\2\2\u00bd\u00be\7?\2\2\u00be8\3\2\2\2\u00bf\u00c0\7/\2\2\u00c0"+
		"\u00c1\7?\2\2\u00c1:\3\2\2\2\u00c2\u00c3\7,\2\2\u00c3\u00c4\7?\2\2\u00c4"+
		"<\3\2\2\2\u00c5\u00c6\7\61\2\2\u00c6\u00c7\7?\2\2\u00c7>\3\2\2\2\u00c8"+
		"\u00c9\7\60\2\2\u00c9\u00ca\7\60\2\2\u00ca@\3\2\2\2\u00cb\u00cc\7\60\2"+
		"\2\u00cc\u00cd\7\60\2\2\u00cd\u00ce\7\60\2\2\u00ceB\3\2\2\2\u00cf\u00d0"+
		"\7x\2\2\u00d0\u00d1\7c\2\2\u00d1\u00d2\7t\2\2\u00d2D\3\2\2\2\u00d3\u00d4"+
		"\7f\2\2\u00d4\u00d5\7g\2\2\u00d5\u00d6\7h\2\2\u00d6F\3\2\2\2\u00d7\u00d8"+
		"\7h\2\2\u00d8\u00d9\7q\2\2\u00d9\u00df\7t\2\2\u00da\u00db\7h\2\2\u00db"+
		"\u00dc\7q\2\2\u00dc\u00dd\7t\2\2\u00dd\u00df\7t\2\2\u00de\u00d7\3\2\2"+
		"\2\u00de\u00da\3\2\2\2\u00dfH\3\2\2\2\u00e0\u00e1\7k\2\2\u00e1\u00e2\7"+
		"h\2\2\u00e2J\3\2\2\2\u00e3\u00e4\7u\2\2\u00e4\u00e5\7y\2\2\u00e5\u00e6"+
		"\7k\2\2\u00e6\u00e7\7v\2\2\u00e7\u00e8\7e\2\2\u00e8\u00e9\7j\2\2\u00e9"+
		"L\3\2\2\2\u00ea\u00eb\7g\2\2\u00eb\u00ec\7n\2\2\u00ec\u00ed\7u\2\2\u00ed"+
		"\u00ee\7g\2\2\u00eeN\3\2\2\2\u00ef\u00f0\7g\2\2\u00f0\u00f1\7p\2\2\u00f1"+
		"\u00f2\7v\2\2\u00f2\u00f3\7g\2\2\u00f3\u00f4\7t\2\2\u00f4P\3\2\2\2\u00f5"+
		"\u00f6\7e\2\2\u00f6\u00f7\7c\2\2\u00f7\u00f8\7v\2\2\u00f8\u00f9\7e\2\2"+
		"\u00f9\u00fa\7j\2\2\u00faR\3\2\2\2\u00fb\u00fc\7e\2\2\u00fc\u00fd\7n\2"+
		"\2\u00fd\u00fe\7q\2\2\u00fe\u00ff\7p\2\2\u00ff\u0100\7g\2\2\u0100T\3\2"+
		"\2\2\u0101\u0102\7f\2\2\u0102\u0103\7q\2\2\u0103V\3\2\2\2\u0104\u0105"+
		"\7-\2\2\u0105X\3\2\2\2\u0106\u0107\7/\2\2\u0107Z\3\2\2\2\u0108\u0109\7"+
		"#\2\2\u0109\\\3\2\2\2\u010a\u0115\t\2\2\2\u010b\u010c\7?\2\2\u010c\u0115"+
		"\7?\2\2\u010d\u010e\7#\2\2\u010e\u0115\7?\2\2\u010f\u0115\t\3\2\2\u0110"+
		"\u0111\7@\2\2\u0111\u0115\7?\2\2\u0112\u0113\7>\2\2\u0113\u0115\7?\2\2"+
		"\u0114\u010a\3\2\2\2\u0114\u010b\3\2\2\2\u0114\u010d\3\2\2\2\u0114\u010f"+
		"\3\2\2\2\u0114\u0110\3\2\2\2\u0114\u0112\3\2\2\2\u0115^\3\2\2\2\u0116"+
		"\u0118\t\4\2\2\u0117\u0116\3\2\2\2\u0118\u0119\3\2\2\2\u0119\u0117\3\2"+
		"\2\2\u0119\u011a\3\2\2\2\u011a`\3\2\2\2\u011b\u011d\t\4\2\2\u011c\u011b"+
		"\3\2\2\2\u011d\u011e\3\2\2\2\u011e\u011c\3\2\2\2\u011e\u011f\3\2\2\2\u011f"+
		"\u0120\3\2\2\2\u0120\u0122\7\60\2\2\u0121\u0123\t\4\2\2\u0122\u0121\3"+
		"\2\2\2\u0123\u0124\3\2\2\2\u0124\u0122\3\2\2\2\u0124\u0125\3\2\2\2\u0125"+
		"\u013b\3\2\2\2\u0126\u0128\t\4\2\2\u0127\u0126\3\2\2\2\u0128\u0129\3\2"+
		"\2\2\u0129\u0127\3\2\2\2\u0129\u012a\3\2\2\2\u012a\u012b\3\2\2\2\u012b"+
		"\u012d\7\60\2\2\u012c\u012e\t\4\2\2\u012d\u012c\3\2\2\2\u012e\u012f\3"+
		"\2\2\2\u012f\u012d\3\2\2\2\u012f\u0130\3\2\2\2\u0130\u0131\3\2\2\2\u0131"+
		"\u0133\t\5\2\2\u0132\u0134\t\6\2\2\u0133\u0132\3\2\2\2\u0133\u0134\3\2"+
		"\2\2\u0134\u0136\3\2\2\2\u0135\u0137\t\4\2\2\u0136\u0135\3\2\2\2\u0137"+
		"\u0138\3\2\2\2\u0138\u0136\3\2\2\2\u0138\u0139\3\2\2\2\u0139\u013b\3\2"+
		"\2\2\u013a\u011c\3\2\2\2\u013a\u0127\3\2\2\2\u013bb\3\2\2\2\u013c\u013e"+
		"\7\17\2\2\u013d\u013c\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u013f\3\2\2\2"+
		"\u013f\u0140\7\f\2\2\u0140\u0141\3\2\2\2\u0141\u0142\b\62\2\2\u0142d\3"+
		"\2\2\2\u0143\u0145\t\7\2\2\u0144\u0143\3\2\2\2\u0145\u0146\3\2\2\2\u0146"+
		"\u0144\3\2\2\2\u0146\u0147\3\2\2\2\u0147\u0148\3\2\2\2\u0148\u0149\b\63"+
		"\2\2\u0149f\3\2\2\2\u014a\u014b\7=\2\2\u014bh\3\2\2\2\u014c\u014f\5k\66"+
		"\2\u014d\u014f\7a\2\2\u014e\u014c\3\2\2\2\u014e\u014d\3\2\2\2\u014f\u0154"+
		"\3\2\2\2\u0150\u0153\5k\66\2\u0151\u0153\t\b\2\2\u0152\u0150\3\2\2\2\u0152"+
		"\u0151\3\2\2\2\u0153\u0156\3\2\2\2\u0154\u0152\3\2\2\2\u0154\u0155\3\2"+
		"\2\2\u0155\u015a\3\2\2\2\u0156\u0154\3\2\2\2\u0157\u0158\7\60\2\2\u0158"+
		"\u0159\7\60\2\2\u0159\u015b\7\60\2\2\u015a\u0157\3\2\2\2\u015a\u015b\3"+
		"\2\2\2\u015bj\3\2\2\2\u015c\u015d\t\t\2\2\u015dl\3\2\2\2\u015e\u015f\7"+
		"\61\2\2\u015f\u0160\7,\2\2\u0160\u0164\3\2\2\2\u0161\u0163\13\2\2\2\u0162"+
		"\u0161\3\2\2\2\u0163\u0166\3\2\2\2\u0164\u0165\3\2\2\2\u0164\u0162\3\2"+
		"\2\2\u0165\u0167\3\2\2\2\u0166\u0164\3\2\2\2\u0167\u0168\7,\2\2\u0168"+
		"\u0169\7\61\2\2\u0169\u016a\3\2\2\2\u016a\u016b\b\67\2\2\u016bn\3\2\2"+
		"\2\u016c\u016d\7\61\2\2\u016d\u016e\7\61\2\2\u016e\u0172\3\2\2\2\u016f"+
		"\u0171\n\n\2\2\u0170\u016f\3\2\2\2\u0171\u0174\3\2\2\2\u0172\u0170\3\2"+
		"\2\2\u0172\u0173\3\2\2\2\u0173\u0175\3\2\2\2\u0174\u0172\3\2\2\2\u0175"+
		"\u0176\b8\2\2\u0176p\3\2\2\2\u0177\u0178\7B\2\2\u0178\u0179\7$\2\2\u0179"+
		"\u017f\3\2\2\2\u017a\u017e\n\13\2\2\u017b\u017c\7$\2\2\u017c\u017e\7$"+
		"\2\2\u017d\u017a\3\2\2\2\u017d\u017b\3\2\2\2\u017e\u0181\3\2\2\2\u017f"+
		"\u017d\3\2\2\2\u017f\u0180\3\2\2\2\u0180\u0182\3\2\2\2\u0181\u017f\3\2"+
		"\2\2\u0182\u0183\7$\2\2\u0183r\3\2\2\2\u0184\u0186\7$\2\2\u0185\u0187"+
		"\5u;\2\u0186\u0185\3\2\2\2\u0186\u0187\3\2\2\2\u0187\u0188\3\2\2\2\u0188"+
		"\u0189\7$\2\2\u0189t\3\2\2\2\u018a\u018c\5w<\2\u018b\u018a\3\2\2\2\u018c"+
		"\u018d\3\2\2\2\u018d\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018ev\3\2\2\2"+
		"\u018f\u0198\n\f\2\2\u0190\u0191\7^\2\2\u0191\u0198\t\r\2\2\u0192\u0193"+
		"\7^\2\2\u0193\u0198\7\f\2\2\u0194\u0195\7^\2\2\u0195\u0196\7\17\2\2\u0196"+
		"\u0198\7\f\2\2\u0197\u018f\3\2\2\2\u0197\u0190\3\2\2\2\u0197\u0192\3\2"+
		"\2\2\u0197\u0194\3\2\2\2\u0198x\3\2\2\2\32\2\u00de\u0114\u0119\u011e\u0124"+
		"\u0129\u012f\u0133\u0138\u013a\u013d\u0146\u014e\u0152\u0154\u015a\u0164"+
		"\u0172\u017d\u017f\u0186\u018d\u0197\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}