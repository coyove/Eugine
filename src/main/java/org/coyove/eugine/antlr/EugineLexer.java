// Generated from Eugine.g by ANTLR 4.5.3

package org.coyove.eugine.antlr;

import org.coyove.eugine.util.*;
import org.coyove.eugine.base.*;
import org.coyove.eugine.value.*;
import org.coyove.eugine.core.*;
import org.coyove.eugine.library.*;
import org.coyove.eugine.parser.Atom;
import java.util.HashMap;
import org.apache.commons.lang3.ClassUtils;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class EugineLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, Var=37, Const=38, Def=39, 
		Inline=40, For=41, If=42, Switch=43, Else=44, Enter=45, Catch=46, Clone=47, 
		Sync=48, Type=49, AddressOf=50, New=51, Static=52, Do=53, Add=54, Sub=55, 
		Not=56, AryOp=57, Integer=58, Double=59, NEWLINE=60, WS=61, Semi=62, Identifier=63, 
		JavaFullName=64, Letter=65, BlockComment=66, LineComment=67, RawString=68, 
		StringLiteral=69;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "Var", "Const", "Def", "Inline", "For", "If", 
		"Switch", "Else", "Enter", "Catch", "Clone", "Sync", "Type", "AddressOf", 
		"New", "Static", "Do", "Add", "Sub", "Not", "AryOp", "Integer", "Double", 
		"NEWLINE", "WS", "Semi", "Identifier", "JavaFullName", "Letter", "BlockComment", 
		"LineComment", "RawString", "StringLiteral", "SCharSequence", "SChar"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'{'", "'}'", "'import'", "'.'", "'('", "')'", "'='", "','", "'&'", 
		"':'", "'['", "']'", "'=>'", "'::'", "':>'", "'#'", "'..'", "'...'", "'++'", 
		"'--'", "'*'", "'/'", "'%'", "'<+'", "'<'", "'>'", "'<='", "'>='", "'=='", 
		"'!='", "'&&'", "'||'", "'+='", "'-='", "'*='", "'/='", "'var'", "'const'", 
		"'def'", "'inline'", null, "'if'", "'switch'", "'else'", "'enter'", "'catch'", 
		"'clone'", "'sync'", "'typeof'", "'addressof'", "'new'", "'static'", "'do'", 
		"'+'", "'-'", "'!'", null, null, null, null, null, "';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "Var", "Const", "Def", "Inline", "For", "If", "Switch", "Else", 
		"Enter", "Catch", "Clone", "Sync", "Type", "AddressOf", "New", "Static", 
		"Do", "Add", "Sub", "Not", "AryOp", "Integer", "Double", "NEWLINE", "WS", 
		"Semi", "Identifier", "JavaFullName", "Letter", "BlockComment", "LineComment", 
		"RawString", "StringLiteral"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public EugineLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Eugine.g"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2G\u01fa\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\3\2"+
		"\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3"+
		"\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\17\3\17"+
		"\3\17\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24"+
		"\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31"+
		"\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37"+
		"\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3"+
		"&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3"+
		"*\3*\3*\3*\3*\3*\3*\5*\u010e\n*\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3-\3-\3"+
		"-\3-\3-\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3"+
		"\60\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3"+
		"\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\65\3"+
		"\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\67\3\67\38\38\39\39\3:\3"+
		":\3:\3:\3:\3:\3:\3:\3:\3:\5:\u0165\n:\3;\6;\u0168\n;\r;\16;\u0169\3<\6"+
		"<\u016d\n<\r<\16<\u016e\3<\3<\6<\u0173\n<\r<\16<\u0174\3<\6<\u0178\n<"+
		"\r<\16<\u0179\3<\3<\6<\u017e\n<\r<\16<\u017f\3<\3<\5<\u0184\n<\3<\6<\u0187"+
		"\n<\r<\16<\u0188\5<\u018b\n<\3=\5=\u018e\n=\3=\3=\3=\3=\3>\6>\u0195\n"+
		">\r>\16>\u0196\3>\3>\3?\3?\3@\3@\5@\u019f\n@\3@\3@\7@\u01a3\n@\f@\16@"+
		"\u01a6\13@\3@\3@\3@\5@\u01ab\n@\3A\3A\3A\7A\u01b0\nA\fA\16A\u01b3\13A"+
		"\3A\3A\5A\u01b7\nA\3A\3A\3A\5A\u01bc\nA\3B\3B\3C\3C\3C\3C\7C\u01c4\nC"+
		"\fC\16C\u01c7\13C\3C\3C\3C\3C\3C\3D\3D\3D\3D\7D\u01d2\nD\fD\16D\u01d5"+
		"\13D\3D\3D\3E\3E\3E\3E\3E\3E\7E\u01df\nE\fE\16E\u01e2\13E\3E\3E\3F\3F"+
		"\5F\u01e8\nF\3F\3F\3G\6G\u01ed\nG\rG\16G\u01ee\3H\3H\3H\3H\3H\3H\3H\3"+
		"H\5H\u01f9\nH\3\u01c5\2I\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f"+
		"\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63"+
		"\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62"+
		"c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087"+
		"E\u0089F\u008bG\u008d\2\u008f\2\3\2\16\6\2\'\',,//\61\61\4\2>>@@\3\2\62"+
		";\4\2GGgg\5\2--//^^\4\2\13\13\"\"\4\2\62;aa\4\2C\\c|\4\2\f\f\17\17\3\2"+
		"$$\6\2\f\f\17\17$$^^\f\2$$))AA^^cdhhppttvvxx\u0217\2\3\3\2\2\2\2\5\3\2"+
		"\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3"+
		"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2"+
		"Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3"+
		"\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2"+
		"\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2"+
		"\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3"+
		"\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\3\u0091\3\2\2\2\5\u0093\3\2\2\2"+
		"\7\u0095\3\2\2\2\t\u009c\3\2\2\2\13\u009e\3\2\2\2\r\u00a0\3\2\2\2\17\u00a2"+
		"\3\2\2\2\21\u00a4\3\2\2\2\23\u00a6\3\2\2\2\25\u00a8\3\2\2\2\27\u00aa\3"+
		"\2\2\2\31\u00ac\3\2\2\2\33\u00ae\3\2\2\2\35\u00b1\3\2\2\2\37\u00b4\3\2"+
		"\2\2!\u00b7\3\2\2\2#\u00b9\3\2\2\2%\u00bc\3\2\2\2\'\u00c0\3\2\2\2)\u00c3"+
		"\3\2\2\2+\u00c6\3\2\2\2-\u00c8\3\2\2\2/\u00ca\3\2\2\2\61\u00cc\3\2\2\2"+
		"\63\u00cf\3\2\2\2\65\u00d1\3\2\2\2\67\u00d3\3\2\2\29\u00d6\3\2\2\2;\u00d9"+
		"\3\2\2\2=\u00dc\3\2\2\2?\u00df\3\2\2\2A\u00e2\3\2\2\2C\u00e5\3\2\2\2E"+
		"\u00e8\3\2\2\2G\u00eb\3\2\2\2I\u00ee\3\2\2\2K\u00f1\3\2\2\2M\u00f5\3\2"+
		"\2\2O\u00fb\3\2\2\2Q\u00ff\3\2\2\2S\u010d\3\2\2\2U\u010f\3\2\2\2W\u0112"+
		"\3\2\2\2Y\u0119\3\2\2\2[\u011e\3\2\2\2]\u0124\3\2\2\2_\u012a\3\2\2\2a"+
		"\u0130\3\2\2\2c\u0135\3\2\2\2e\u013c\3\2\2\2g\u0146\3\2\2\2i\u014a\3\2"+
		"\2\2k\u0151\3\2\2\2m\u0154\3\2\2\2o\u0156\3\2\2\2q\u0158\3\2\2\2s\u0164"+
		"\3\2\2\2u\u0167\3\2\2\2w\u018a\3\2\2\2y\u018d\3\2\2\2{\u0194\3\2\2\2}"+
		"\u019a\3\2\2\2\177\u019e\3\2\2\2\u0081\u01ac\3\2\2\2\u0083\u01bd\3\2\2"+
		"\2\u0085\u01bf\3\2\2\2\u0087\u01cd\3\2\2\2\u0089\u01d8\3\2\2\2\u008b\u01e5"+
		"\3\2\2\2\u008d\u01ec\3\2\2\2\u008f\u01f8\3\2\2\2\u0091\u0092\7}\2\2\u0092"+
		"\4\3\2\2\2\u0093\u0094\7\177\2\2\u0094\6\3\2\2\2\u0095\u0096\7k\2\2\u0096"+
		"\u0097\7o\2\2\u0097\u0098\7r\2\2\u0098\u0099\7q\2\2\u0099\u009a\7t\2\2"+
		"\u009a\u009b\7v\2\2\u009b\b\3\2\2\2\u009c\u009d\7\60\2\2\u009d\n\3\2\2"+
		"\2\u009e\u009f\7*\2\2\u009f\f\3\2\2\2\u00a0\u00a1\7+\2\2\u00a1\16\3\2"+
		"\2\2\u00a2\u00a3\7?\2\2\u00a3\20\3\2\2\2\u00a4\u00a5\7.\2\2\u00a5\22\3"+
		"\2\2\2\u00a6\u00a7\7(\2\2\u00a7\24\3\2\2\2\u00a8\u00a9\7<\2\2\u00a9\26"+
		"\3\2\2\2\u00aa\u00ab\7]\2\2\u00ab\30\3\2\2\2\u00ac\u00ad\7_\2\2\u00ad"+
		"\32\3\2\2\2\u00ae\u00af\7?\2\2\u00af\u00b0\7@\2\2\u00b0\34\3\2\2\2\u00b1"+
		"\u00b2\7<\2\2\u00b2\u00b3\7<\2\2\u00b3\36\3\2\2\2\u00b4\u00b5\7<\2\2\u00b5"+
		"\u00b6\7@\2\2\u00b6 \3\2\2\2\u00b7\u00b8\7%\2\2\u00b8\"\3\2\2\2\u00b9"+
		"\u00ba\7\60\2\2\u00ba\u00bb\7\60\2\2\u00bb$\3\2\2\2\u00bc\u00bd\7\60\2"+
		"\2\u00bd\u00be\7\60\2\2\u00be\u00bf\7\60\2\2\u00bf&\3\2\2\2\u00c0\u00c1"+
		"\7-\2\2\u00c1\u00c2\7-\2\2\u00c2(\3\2\2\2\u00c3\u00c4\7/\2\2\u00c4\u00c5"+
		"\7/\2\2\u00c5*\3\2\2\2\u00c6\u00c7\7,\2\2\u00c7,\3\2\2\2\u00c8\u00c9\7"+
		"\61\2\2\u00c9.\3\2\2\2\u00ca\u00cb\7\'\2\2\u00cb\60\3\2\2\2\u00cc\u00cd"+
		"\7>\2\2\u00cd\u00ce\7-\2\2\u00ce\62\3\2\2\2\u00cf\u00d0\7>\2\2\u00d0\64"+
		"\3\2\2\2\u00d1\u00d2\7@\2\2\u00d2\66\3\2\2\2\u00d3\u00d4\7>\2\2\u00d4"+
		"\u00d5\7?\2\2\u00d58\3\2\2\2\u00d6\u00d7\7@\2\2\u00d7\u00d8\7?\2\2\u00d8"+
		":\3\2\2\2\u00d9\u00da\7?\2\2\u00da\u00db\7?\2\2\u00db<\3\2\2\2\u00dc\u00dd"+
		"\7#\2\2\u00dd\u00de\7?\2\2\u00de>\3\2\2\2\u00df\u00e0\7(\2\2\u00e0\u00e1"+
		"\7(\2\2\u00e1@\3\2\2\2\u00e2\u00e3\7~\2\2\u00e3\u00e4\7~\2\2\u00e4B\3"+
		"\2\2\2\u00e5\u00e6\7-\2\2\u00e6\u00e7\7?\2\2\u00e7D\3\2\2\2\u00e8\u00e9"+
		"\7/\2\2\u00e9\u00ea\7?\2\2\u00eaF\3\2\2\2\u00eb\u00ec\7,\2\2\u00ec\u00ed"+
		"\7?\2\2\u00edH\3\2\2\2\u00ee\u00ef\7\61\2\2\u00ef\u00f0\7?\2\2\u00f0J"+
		"\3\2\2\2\u00f1\u00f2\7x\2\2\u00f2\u00f3\7c\2\2\u00f3\u00f4\7t\2\2\u00f4"+
		"L\3\2\2\2\u00f5\u00f6\7e\2\2\u00f6\u00f7\7q\2\2\u00f7\u00f8\7p\2\2\u00f8"+
		"\u00f9\7u\2\2\u00f9\u00fa\7v\2\2\u00faN\3\2\2\2\u00fb\u00fc\7f\2\2\u00fc"+
		"\u00fd\7g\2\2\u00fd\u00fe\7h\2\2\u00feP\3\2\2\2\u00ff\u0100\7k\2\2\u0100"+
		"\u0101\7p\2\2\u0101\u0102\7n\2\2\u0102\u0103\7k\2\2\u0103\u0104\7p\2\2"+
		"\u0104\u0105\7g\2\2\u0105R\3\2\2\2\u0106\u0107\7h\2\2\u0107\u0108\7q\2"+
		"\2\u0108\u010e\7t\2\2\u0109\u010a\7h\2\2\u010a\u010b\7q\2\2\u010b\u010c"+
		"\7t\2\2\u010c\u010e\7t\2\2\u010d\u0106\3\2\2\2\u010d\u0109\3\2\2\2\u010e"+
		"T\3\2\2\2\u010f\u0110\7k\2\2\u0110\u0111\7h\2\2\u0111V\3\2\2\2\u0112\u0113"+
		"\7u\2\2\u0113\u0114\7y\2\2\u0114\u0115\7k\2\2\u0115\u0116\7v\2\2\u0116"+
		"\u0117\7e\2\2\u0117\u0118\7j\2\2\u0118X\3\2\2\2\u0119\u011a\7g\2\2\u011a"+
		"\u011b\7n\2\2\u011b\u011c\7u\2\2\u011c\u011d\7g\2\2\u011dZ\3\2\2\2\u011e"+
		"\u011f\7g\2\2\u011f\u0120\7p\2\2\u0120\u0121\7v\2\2\u0121\u0122\7g\2\2"+
		"\u0122\u0123\7t\2\2\u0123\\\3\2\2\2\u0124\u0125\7e\2\2\u0125\u0126\7c"+
		"\2\2\u0126\u0127\7v\2\2\u0127\u0128\7e\2\2\u0128\u0129\7j\2\2\u0129^\3"+
		"\2\2\2\u012a\u012b\7e\2\2\u012b\u012c\7n\2\2\u012c\u012d\7q\2\2\u012d"+
		"\u012e\7p\2\2\u012e\u012f\7g\2\2\u012f`\3\2\2\2\u0130\u0131\7u\2\2\u0131"+
		"\u0132\7{\2\2\u0132\u0133\7p\2\2\u0133\u0134\7e\2\2\u0134b\3\2\2\2\u0135"+
		"\u0136\7v\2\2\u0136\u0137\7{\2\2\u0137\u0138\7r\2\2\u0138\u0139\7g\2\2"+
		"\u0139\u013a\7q\2\2\u013a\u013b\7h\2\2\u013bd\3\2\2\2\u013c\u013d\7c\2"+
		"\2\u013d\u013e\7f\2\2\u013e\u013f\7f\2\2\u013f\u0140\7t\2\2\u0140\u0141"+
		"\7g\2\2\u0141\u0142\7u\2\2\u0142\u0143\7u\2\2\u0143\u0144\7q\2\2\u0144"+
		"\u0145\7h\2\2\u0145f\3\2\2\2\u0146\u0147\7p\2\2\u0147\u0148\7g\2\2\u0148"+
		"\u0149\7y\2\2\u0149h\3\2\2\2\u014a\u014b\7u\2\2\u014b\u014c\7v\2\2\u014c"+
		"\u014d\7c\2\2\u014d\u014e\7v\2\2\u014e\u014f\7k\2\2\u014f\u0150\7e\2\2"+
		"\u0150j\3\2\2\2\u0151\u0152\7f\2\2\u0152\u0153\7q\2\2\u0153l\3\2\2\2\u0154"+
		"\u0155\7-\2\2\u0155n\3\2\2\2\u0156\u0157\7/\2\2\u0157p\3\2\2\2\u0158\u0159"+
		"\7#\2\2\u0159r\3\2\2\2\u015a\u0165\t\2\2\2\u015b\u015c\7?\2\2\u015c\u0165"+
		"\7?\2\2\u015d\u015e\7#\2\2\u015e\u0165\7?\2\2\u015f\u0165\t\3\2\2\u0160"+
		"\u0161\7@\2\2\u0161\u0165\7?\2\2\u0162\u0163\7>\2\2\u0163\u0165\7?\2\2"+
		"\u0164\u015a\3\2\2\2\u0164\u015b\3\2\2\2\u0164\u015d\3\2\2\2\u0164\u015f"+
		"\3\2\2\2\u0164\u0160\3\2\2\2\u0164\u0162\3\2\2\2\u0165t\3\2\2\2\u0166"+
		"\u0168\t\4\2\2\u0167\u0166\3\2\2\2\u0168\u0169\3\2\2\2\u0169\u0167\3\2"+
		"\2\2\u0169\u016a\3\2\2\2\u016av\3\2\2\2\u016b\u016d\t\4\2\2\u016c\u016b"+
		"\3\2\2\2\u016d\u016e\3\2\2\2\u016e\u016c\3\2\2\2\u016e\u016f\3\2\2\2\u016f"+
		"\u0170\3\2\2\2\u0170\u0172\7\60\2\2\u0171\u0173\t\4\2\2\u0172\u0171\3"+
		"\2\2\2\u0173\u0174\3\2\2\2\u0174\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175"+
		"\u018b\3\2\2\2\u0176\u0178\t\4\2\2\u0177\u0176\3\2\2\2\u0178\u0179\3\2"+
		"\2\2\u0179\u0177\3\2\2\2\u0179\u017a\3\2\2\2\u017a\u017b\3\2\2\2\u017b"+
		"\u017d\7\60\2\2\u017c\u017e\t\4\2\2\u017d\u017c\3\2\2\2\u017e\u017f\3"+
		"\2\2\2\u017f\u017d\3\2\2\2\u017f\u0180\3\2\2\2\u0180\u0181\3\2\2\2\u0181"+
		"\u0183\t\5\2\2\u0182\u0184\t\6\2\2\u0183\u0182\3\2\2\2\u0183\u0184\3\2"+
		"\2\2\u0184\u0186\3\2\2\2\u0185\u0187\t\4\2\2\u0186\u0185\3\2\2\2\u0187"+
		"\u0188\3\2\2\2\u0188\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u018b\3\2"+
		"\2\2\u018a\u016c\3\2\2\2\u018a\u0177\3\2\2\2\u018bx\3\2\2\2\u018c\u018e"+
		"\7\17\2\2\u018d\u018c\3\2\2\2\u018d\u018e\3\2\2\2\u018e\u018f\3\2\2\2"+
		"\u018f\u0190\7\f\2\2\u0190\u0191\3\2\2\2\u0191\u0192\b=\2\2\u0192z\3\2"+
		"\2\2\u0193\u0195\t\7\2\2\u0194\u0193\3\2\2\2\u0195\u0196\3\2\2\2\u0196"+
		"\u0194\3\2\2\2\u0196\u0197\3\2\2\2\u0197\u0198\3\2\2\2\u0198\u0199\b>"+
		"\2\2\u0199|\3\2\2\2\u019a\u019b\7=\2\2\u019b~\3\2\2\2\u019c\u019f\5\u0083"+
		"B\2\u019d\u019f\7a\2\2\u019e\u019c\3\2\2\2\u019e\u019d\3\2\2\2\u019f\u01a4"+
		"\3\2\2\2\u01a0\u01a3\5\u0083B\2\u01a1\u01a3\t\b\2\2\u01a2\u01a0\3\2\2"+
		"\2\u01a2\u01a1\3\2\2\2\u01a3\u01a6\3\2\2\2\u01a4\u01a2\3\2\2\2\u01a4\u01a5"+
		"\3\2\2\2\u01a5\u01aa\3\2\2\2\u01a6\u01a4\3\2\2\2\u01a7\u01a8\7\60\2\2"+
		"\u01a8\u01a9\7\60\2\2\u01a9\u01ab\7\60\2\2\u01aa\u01a7\3\2\2\2\u01aa\u01ab"+
		"\3\2\2\2\u01ab\u0080\3\2\2\2\u01ac\u01b1\5\177@\2\u01ad\u01ae\7^\2\2\u01ae"+
		"\u01b0\5\177@\2\u01af\u01ad\3\2\2\2\u01b0\u01b3\3\2\2\2\u01b1\u01af\3"+
		"\2\2\2\u01b1\u01b2\3\2\2\2\u01b2\u01b6\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b4"+
		"\u01b5\7]\2\2\u01b5\u01b7\7_\2\2\u01b6\u01b4\3\2\2\2\u01b6\u01b7\3\2\2"+
		"\2\u01b7\u01bb\3\2\2\2\u01b8\u01b9\7\60\2\2\u01b9\u01ba\7\60\2\2\u01ba"+
		"\u01bc\7\60\2\2\u01bb\u01b8\3\2\2\2\u01bb\u01bc\3\2\2\2\u01bc\u0082\3"+
		"\2\2\2\u01bd\u01be\t\t\2\2\u01be\u0084\3\2\2\2\u01bf\u01c0\7\61\2\2\u01c0"+
		"\u01c1\7,\2\2\u01c1\u01c5\3\2\2\2\u01c2\u01c4\13\2\2\2\u01c3\u01c2\3\2"+
		"\2\2\u01c4\u01c7\3\2\2\2\u01c5\u01c6\3\2\2\2\u01c5\u01c3\3\2\2\2\u01c6"+
		"\u01c8\3\2\2\2\u01c7\u01c5\3\2\2\2\u01c8\u01c9\7,\2\2\u01c9\u01ca\7\61"+
		"\2\2\u01ca\u01cb\3\2\2\2\u01cb\u01cc\bC\2\2\u01cc\u0086\3\2\2\2\u01cd"+
		"\u01ce\7\61\2\2\u01ce\u01cf\7\61\2\2\u01cf\u01d3\3\2\2\2\u01d0\u01d2\n"+
		"\n\2\2\u01d1\u01d0\3\2\2\2\u01d2\u01d5\3\2\2\2\u01d3\u01d1\3\2\2\2\u01d3"+
		"\u01d4\3\2\2\2\u01d4\u01d6\3\2\2\2\u01d5\u01d3\3\2\2\2\u01d6\u01d7\bD"+
		"\2\2\u01d7\u0088\3\2\2\2\u01d8\u01d9\7B\2\2\u01d9\u01da\7$\2\2\u01da\u01e0"+
		"\3\2\2\2\u01db\u01df\n\13\2\2\u01dc\u01dd\7$\2\2\u01dd\u01df\7$\2\2\u01de"+
		"\u01db\3\2\2\2\u01de\u01dc\3\2\2\2\u01df\u01e2\3\2\2\2\u01e0\u01de\3\2"+
		"\2\2\u01e0\u01e1\3\2\2\2\u01e1\u01e3\3\2\2\2\u01e2\u01e0\3\2\2\2\u01e3"+
		"\u01e4\7$\2\2\u01e4\u008a\3\2\2\2\u01e5\u01e7\7$\2\2\u01e6\u01e8\5\u008d"+
		"G\2\u01e7\u01e6\3\2\2\2\u01e7\u01e8\3\2\2\2\u01e8\u01e9\3\2\2\2\u01e9"+
		"\u01ea\7$\2\2\u01ea\u008c\3\2\2\2\u01eb\u01ed\5\u008fH\2\u01ec\u01eb\3"+
		"\2\2\2\u01ed\u01ee\3\2\2\2\u01ee\u01ec\3\2\2\2\u01ee\u01ef\3\2\2\2\u01ef"+
		"\u008e\3\2\2\2\u01f0\u01f9\n\f\2\2\u01f1\u01f2\7^\2\2\u01f2\u01f9\t\r"+
		"\2\2\u01f3\u01f4\7^\2\2\u01f4\u01f9\7\f\2\2\u01f5\u01f6\7^\2\2\u01f6\u01f7"+
		"\7\17\2\2\u01f7\u01f9\7\f\2\2\u01f8\u01f0\3\2\2\2\u01f8\u01f1\3\2\2\2"+
		"\u01f8\u01f3\3\2\2\2\u01f8\u01f5\3\2\2\2\u01f9\u0090\3\2\2\2\35\2\u010d"+
		"\u0164\u0169\u016e\u0174\u0179\u017f\u0183\u0188\u018a\u018d\u0196\u019e"+
		"\u01a2\u01a4\u01aa\u01b1\u01b6\u01bb\u01c5\u01d3\u01de\u01e0\u01e7\u01ee"+
		"\u01f8\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}