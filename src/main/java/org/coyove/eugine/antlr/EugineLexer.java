// Generated from Eugine.g by ANTLR 4.5.3

package org.coyove.eugine.antlr;

import org.coyove.eugine.util.*;
import org.coyove.eugine.base.*;
import org.coyove.eugine.value.*;
import org.coyove.eugine.core.*;
import org.coyove.eugine.library.*;
import org.coyove.eugine.parser.Atom;
import java.util.HashMap;
import org.apache.commons.lang3.ClassUtils;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class EugineLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, Var=34, Const=35, Def=36, For=37, If=38, Switch=39, 
		Else=40, Enter=41, Catch=42, Clone=43, New=44, Static=45, Do=46, Add=47, 
		Sub=48, Not=49, AryOp=50, Integer=51, Double=52, NEWLINE=53, WS=54, Semi=55, 
		Identifier=56, JavaFullName=57, Letter=58, BlockComment=59, LineComment=60, 
		RawString=61, StringLiteral=62;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"Var", "Const", "Def", "For", "If", "Switch", "Else", "Enter", "Catch", 
		"Clone", "New", "Static", "Do", "Add", "Sub", "Not", "AryOp", "Integer", 
		"Double", "NEWLINE", "WS", "Semi", "Identifier", "JavaFullName", "Letter", 
		"BlockComment", "LineComment", "RawString", "StringLiteral", "SCharSequence", 
		"SChar"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'{'", "'}'", "'import'", "'.'", "'('", "')'", "'='", "','", "':'", 
		"'['", "']'", "'=>'", "'::'", "'..'", "'...'", "'++'", "'--'", "'*'", 
		"'/'", "'%'", "'+.'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'&&'", 
		"'||'", "'+='", "'-='", "'*='", "'/='", "'var'", "'const'", "'def'", null, 
		"'if'", "'switch'", "'else'", "'enter'", "'catch'", "'clone'", "'new'", 
		"'static'", "'do'", "'+'", "'-'", "'!'", null, null, null, null, null, 
		"';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, "Var", "Const", 
		"Def", "For", "If", "Switch", "Else", "Enter", "Catch", "Clone", "New", 
		"Static", "Do", "Add", "Sub", "Not", "AryOp", "Integer", "Double", "NEWLINE", 
		"WS", "Semi", "Identifier", "JavaFullName", "Letter", "BlockComment", 
		"LineComment", "RawString", "StringLiteral"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public EugineLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Eugine.g"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2@\u01c8\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3"+
		"\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3"+
		"\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21"+
		"\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\27\3\27"+
		"\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34"+
		"\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3"+
		"\"\3\"\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&"+
		"\5&\u00f2\n&\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*"+
		"\3*\3*\3*\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3.\3.\3.\3."+
		"\3.\3.\3.\3/\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\63\3"+
		"\63\3\63\3\63\3\63\3\63\3\63\5\63\u0133\n\63\3\64\6\64\u0136\n\64\r\64"+
		"\16\64\u0137\3\65\6\65\u013b\n\65\r\65\16\65\u013c\3\65\3\65\6\65\u0141"+
		"\n\65\r\65\16\65\u0142\3\65\6\65\u0146\n\65\r\65\16\65\u0147\3\65\3\65"+
		"\6\65\u014c\n\65\r\65\16\65\u014d\3\65\3\65\5\65\u0152\n\65\3\65\6\65"+
		"\u0155\n\65\r\65\16\65\u0156\5\65\u0159\n\65\3\66\5\66\u015c\n\66\3\66"+
		"\3\66\3\66\3\66\3\67\6\67\u0163\n\67\r\67\16\67\u0164\3\67\3\67\38\38"+
		"\39\39\59\u016d\n9\39\39\79\u0171\n9\f9\169\u0174\139\39\39\39\59\u0179"+
		"\n9\3:\3:\3:\7:\u017e\n:\f:\16:\u0181\13:\3:\3:\5:\u0185\n:\3:\3:\3:\5"+
		":\u018a\n:\3;\3;\3<\3<\3<\3<\7<\u0192\n<\f<\16<\u0195\13<\3<\3<\3<\3<"+
		"\3<\3=\3=\3=\3=\7=\u01a0\n=\f=\16=\u01a3\13=\3=\3=\3>\3>\3>\3>\3>\3>\7"+
		">\u01ad\n>\f>\16>\u01b0\13>\3>\3>\3?\3?\5?\u01b6\n?\3?\3?\3@\6@\u01bb"+
		"\n@\r@\16@\u01bc\3A\3A\3A\3A\3A\3A\3A\3A\5A\u01c7\nA\3\u0193\2B\3\3\5"+
		"\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"+
		"!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!"+
		"A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s"+
		";u<w=y>{?}@\177\2\u0081\2\3\2\16\6\2\'\',,//\61\61\4\2>>@@\3\2\62;\4\2"+
		"GGgg\5\2--//^^\4\2\13\13\"\"\4\2\62;aa\4\2C\\c|\4\2\f\f\17\17\3\2$$\6"+
		"\2\f\f\17\17$$^^\f\2$$))AA^^cdhhppttvvxx\u01e5\2\3\3\2\2\2\2\5\3\2\2\2"+
		"\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3"+
		"\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2"+
		"\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2"+
		"\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2"+
		"\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2"+
		"\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2"+
		"\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y"+
		"\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2"+
		"\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2"+
		"\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\3\u0083"+
		"\3\2\2\2\5\u0085\3\2\2\2\7\u0087\3\2\2\2\t\u008e\3\2\2\2\13\u0090\3\2"+
		"\2\2\r\u0092\3\2\2\2\17\u0094\3\2\2\2\21\u0096\3\2\2\2\23\u0098\3\2\2"+
		"\2\25\u009a\3\2\2\2\27\u009c\3\2\2\2\31\u009e\3\2\2\2\33\u00a1\3\2\2\2"+
		"\35\u00a4\3\2\2\2\37\u00a7\3\2\2\2!\u00ab\3\2\2\2#\u00ae\3\2\2\2%\u00b1"+
		"\3\2\2\2\'\u00b3\3\2\2\2)\u00b5\3\2\2\2+\u00b7\3\2\2\2-\u00ba\3\2\2\2"+
		"/\u00bc\3\2\2\2\61\u00be\3\2\2\2\63\u00c1\3\2\2\2\65\u00c4\3\2\2\2\67"+
		"\u00c7\3\2\2\29\u00ca\3\2\2\2;\u00cd\3\2\2\2=\u00d0\3\2\2\2?\u00d3\3\2"+
		"\2\2A\u00d6\3\2\2\2C\u00d9\3\2\2\2E\u00dc\3\2\2\2G\u00e0\3\2\2\2I\u00e6"+
		"\3\2\2\2K\u00f1\3\2\2\2M\u00f3\3\2\2\2O\u00f6\3\2\2\2Q\u00fd\3\2\2\2S"+
		"\u0102\3\2\2\2U\u0108\3\2\2\2W\u010e\3\2\2\2Y\u0114\3\2\2\2[\u0118\3\2"+
		"\2\2]\u011f\3\2\2\2_\u0122\3\2\2\2a\u0124\3\2\2\2c\u0126\3\2\2\2e\u0132"+
		"\3\2\2\2g\u0135\3\2\2\2i\u0158\3\2\2\2k\u015b\3\2\2\2m\u0162\3\2\2\2o"+
		"\u0168\3\2\2\2q\u016c\3\2\2\2s\u017a\3\2\2\2u\u018b\3\2\2\2w\u018d\3\2"+
		"\2\2y\u019b\3\2\2\2{\u01a6\3\2\2\2}\u01b3\3\2\2\2\177\u01ba\3\2\2\2\u0081"+
		"\u01c6\3\2\2\2\u0083\u0084\7}\2\2\u0084\4\3\2\2\2\u0085\u0086\7\177\2"+
		"\2\u0086\6\3\2\2\2\u0087\u0088\7k\2\2\u0088\u0089\7o\2\2\u0089\u008a\7"+
		"r\2\2\u008a\u008b\7q\2\2\u008b\u008c\7t\2\2\u008c\u008d\7v\2\2\u008d\b"+
		"\3\2\2\2\u008e\u008f\7\60\2\2\u008f\n\3\2\2\2\u0090\u0091\7*\2\2\u0091"+
		"\f\3\2\2\2\u0092\u0093\7+\2\2\u0093\16\3\2\2\2\u0094\u0095\7?\2\2\u0095"+
		"\20\3\2\2\2\u0096\u0097\7.\2\2\u0097\22\3\2\2\2\u0098\u0099\7<\2\2\u0099"+
		"\24\3\2\2\2\u009a\u009b\7]\2\2\u009b\26\3\2\2\2\u009c\u009d\7_\2\2\u009d"+
		"\30\3\2\2\2\u009e\u009f\7?\2\2\u009f\u00a0\7@\2\2\u00a0\32\3\2\2\2\u00a1"+
		"\u00a2\7<\2\2\u00a2\u00a3\7<\2\2\u00a3\34\3\2\2\2\u00a4\u00a5\7\60\2\2"+
		"\u00a5\u00a6\7\60\2\2\u00a6\36\3\2\2\2\u00a7\u00a8\7\60\2\2\u00a8\u00a9"+
		"\7\60\2\2\u00a9\u00aa\7\60\2\2\u00aa \3\2\2\2\u00ab\u00ac\7-\2\2\u00ac"+
		"\u00ad\7-\2\2\u00ad\"\3\2\2\2\u00ae\u00af\7/\2\2\u00af\u00b0\7/\2\2\u00b0"+
		"$\3\2\2\2\u00b1\u00b2\7,\2\2\u00b2&\3\2\2\2\u00b3\u00b4\7\61\2\2\u00b4"+
		"(\3\2\2\2\u00b5\u00b6\7\'\2\2\u00b6*\3\2\2\2\u00b7\u00b8\7-\2\2\u00b8"+
		"\u00b9\7\60\2\2\u00b9,\3\2\2\2\u00ba\u00bb\7>\2\2\u00bb.\3\2\2\2\u00bc"+
		"\u00bd\7@\2\2\u00bd\60\3\2\2\2\u00be\u00bf\7>\2\2\u00bf\u00c0\7?\2\2\u00c0"+
		"\62\3\2\2\2\u00c1\u00c2\7@\2\2\u00c2\u00c3\7?\2\2\u00c3\64\3\2\2\2\u00c4"+
		"\u00c5\7?\2\2\u00c5\u00c6\7?\2\2\u00c6\66\3\2\2\2\u00c7\u00c8\7#\2\2\u00c8"+
		"\u00c9\7?\2\2\u00c98\3\2\2\2\u00ca\u00cb\7(\2\2\u00cb\u00cc\7(\2\2\u00cc"+
		":\3\2\2\2\u00cd\u00ce\7~\2\2\u00ce\u00cf\7~\2\2\u00cf<\3\2\2\2\u00d0\u00d1"+
		"\7-\2\2\u00d1\u00d2\7?\2\2\u00d2>\3\2\2\2\u00d3\u00d4\7/\2\2\u00d4\u00d5"+
		"\7?\2\2\u00d5@\3\2\2\2\u00d6\u00d7\7,\2\2\u00d7\u00d8\7?\2\2\u00d8B\3"+
		"\2\2\2\u00d9\u00da\7\61\2\2\u00da\u00db\7?\2\2\u00dbD\3\2\2\2\u00dc\u00dd"+
		"\7x\2\2\u00dd\u00de\7c\2\2\u00de\u00df\7t\2\2\u00dfF\3\2\2\2\u00e0\u00e1"+
		"\7e\2\2\u00e1\u00e2\7q\2\2\u00e2\u00e3\7p\2\2\u00e3\u00e4\7u\2\2\u00e4"+
		"\u00e5\7v\2\2\u00e5H\3\2\2\2\u00e6\u00e7\7f\2\2\u00e7\u00e8\7g\2\2\u00e8"+
		"\u00e9\7h\2\2\u00e9J\3\2\2\2\u00ea\u00eb\7h\2\2\u00eb\u00ec\7q\2\2\u00ec"+
		"\u00f2\7t\2\2\u00ed\u00ee\7h\2\2\u00ee\u00ef\7q\2\2\u00ef\u00f0\7t\2\2"+
		"\u00f0\u00f2\7t\2\2\u00f1\u00ea\3\2\2\2\u00f1\u00ed\3\2\2\2\u00f2L\3\2"+
		"\2\2\u00f3\u00f4\7k\2\2\u00f4\u00f5\7h\2\2\u00f5N\3\2\2\2\u00f6\u00f7"+
		"\7u\2\2\u00f7\u00f8\7y\2\2\u00f8\u00f9\7k\2\2\u00f9\u00fa\7v\2\2\u00fa"+
		"\u00fb\7e\2\2\u00fb\u00fc\7j\2\2\u00fcP\3\2\2\2\u00fd\u00fe\7g\2\2\u00fe"+
		"\u00ff\7n\2\2\u00ff\u0100\7u\2\2\u0100\u0101\7g\2\2\u0101R\3\2\2\2\u0102"+
		"\u0103\7g\2\2\u0103\u0104\7p\2\2\u0104\u0105\7v\2\2\u0105\u0106\7g\2\2"+
		"\u0106\u0107\7t\2\2\u0107T\3\2\2\2\u0108\u0109\7e\2\2\u0109\u010a\7c\2"+
		"\2\u010a\u010b\7v\2\2\u010b\u010c\7e\2\2\u010c\u010d\7j\2\2\u010dV\3\2"+
		"\2\2\u010e\u010f\7e\2\2\u010f\u0110\7n\2\2\u0110\u0111\7q\2\2\u0111\u0112"+
		"\7p\2\2\u0112\u0113\7g\2\2\u0113X\3\2\2\2\u0114\u0115\7p\2\2\u0115\u0116"+
		"\7g\2\2\u0116\u0117\7y\2\2\u0117Z\3\2\2\2\u0118\u0119\7u\2\2\u0119\u011a"+
		"\7v\2\2\u011a\u011b\7c\2\2\u011b\u011c\7v\2\2\u011c\u011d\7k\2\2\u011d"+
		"\u011e\7e\2\2\u011e\\\3\2\2\2\u011f\u0120\7f\2\2\u0120\u0121\7q\2\2\u0121"+
		"^\3\2\2\2\u0122\u0123\7-\2\2\u0123`\3\2\2\2\u0124\u0125\7/\2\2\u0125b"+
		"\3\2\2\2\u0126\u0127\7#\2\2\u0127d\3\2\2\2\u0128\u0133\t\2\2\2\u0129\u012a"+
		"\7?\2\2\u012a\u0133\7?\2\2\u012b\u012c\7#\2\2\u012c\u0133\7?\2\2\u012d"+
		"\u0133\t\3\2\2\u012e\u012f\7@\2\2\u012f\u0133\7?\2\2\u0130\u0131\7>\2"+
		"\2\u0131\u0133\7?\2\2\u0132\u0128\3\2\2\2\u0132\u0129\3\2\2\2\u0132\u012b"+
		"\3\2\2\2\u0132\u012d\3\2\2\2\u0132\u012e\3\2\2\2\u0132\u0130\3\2\2\2\u0133"+
		"f\3\2\2\2\u0134\u0136\t\4\2\2\u0135\u0134\3\2\2\2\u0136\u0137\3\2\2\2"+
		"\u0137\u0135\3\2\2\2\u0137\u0138\3\2\2\2\u0138h\3\2\2\2\u0139\u013b\t"+
		"\4\2\2\u013a\u0139\3\2\2\2\u013b\u013c\3\2\2\2\u013c\u013a\3\2\2\2\u013c"+
		"\u013d\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u0140\7\60\2\2\u013f\u0141\t"+
		"\4\2\2\u0140\u013f\3\2\2\2\u0141\u0142\3\2\2\2\u0142\u0140\3\2\2\2\u0142"+
		"\u0143\3\2\2\2\u0143\u0159\3\2\2\2\u0144\u0146\t\4\2\2\u0145\u0144\3\2"+
		"\2\2\u0146\u0147\3\2\2\2\u0147\u0145\3\2\2\2\u0147\u0148\3\2\2\2\u0148"+
		"\u0149\3\2\2\2\u0149\u014b\7\60\2\2\u014a\u014c\t\4\2\2\u014b\u014a\3"+
		"\2\2\2\u014c\u014d\3\2\2\2\u014d\u014b\3\2\2\2\u014d\u014e\3\2\2\2\u014e"+
		"\u014f\3\2\2\2\u014f\u0151\t\5\2\2\u0150\u0152\t\6\2\2\u0151\u0150\3\2"+
		"\2\2\u0151\u0152\3\2\2\2\u0152\u0154\3\2\2\2\u0153\u0155\t\4\2\2\u0154"+
		"\u0153\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0154\3\2\2\2\u0156\u0157\3\2"+
		"\2\2\u0157\u0159\3\2\2\2\u0158\u013a\3\2\2\2\u0158\u0145\3\2\2\2\u0159"+
		"j\3\2\2\2\u015a\u015c\7\17\2\2\u015b\u015a\3\2\2\2\u015b\u015c\3\2\2\2"+
		"\u015c\u015d\3\2\2\2\u015d\u015e\7\f\2\2\u015e\u015f\3\2\2\2\u015f\u0160"+
		"\b\66\2\2\u0160l\3\2\2\2\u0161\u0163\t\7\2\2\u0162\u0161\3\2\2\2\u0163"+
		"\u0164\3\2\2\2\u0164\u0162\3\2\2\2\u0164\u0165\3\2\2\2\u0165\u0166\3\2"+
		"\2\2\u0166\u0167\b\67\2\2\u0167n\3\2\2\2\u0168\u0169\7=\2\2\u0169p\3\2"+
		"\2\2\u016a\u016d\5u;\2\u016b\u016d\7a\2\2\u016c\u016a\3\2\2\2\u016c\u016b"+
		"\3\2\2\2\u016d\u0172\3\2\2\2\u016e\u0171\5u;\2\u016f\u0171\t\b\2\2\u0170"+
		"\u016e\3\2\2\2\u0170\u016f\3\2\2\2\u0171\u0174\3\2\2\2\u0172\u0170\3\2"+
		"\2\2\u0172\u0173\3\2\2\2\u0173\u0178\3\2\2\2\u0174\u0172\3\2\2\2\u0175"+
		"\u0176\7\60\2\2\u0176\u0177\7\60\2\2\u0177\u0179\7\60\2\2\u0178\u0175"+
		"\3\2\2\2\u0178\u0179\3\2\2\2\u0179r\3\2\2\2\u017a\u017f\5q9\2\u017b\u017c"+
		"\7^\2\2\u017c\u017e\5q9\2\u017d\u017b\3\2\2\2\u017e\u0181\3\2\2\2\u017f"+
		"\u017d\3\2\2\2\u017f\u0180\3\2\2\2\u0180\u0184\3\2\2\2\u0181\u017f\3\2"+
		"\2\2\u0182\u0183\7]\2\2\u0183\u0185\7_\2\2\u0184\u0182\3\2\2\2\u0184\u0185"+
		"\3\2\2\2\u0185\u0189\3\2\2\2\u0186\u0187\7\60\2\2\u0187\u0188\7\60\2\2"+
		"\u0188\u018a\7\60\2\2\u0189\u0186\3\2\2\2\u0189\u018a\3\2\2\2\u018at\3"+
		"\2\2\2\u018b\u018c\t\t\2\2\u018cv\3\2\2\2\u018d\u018e\7\61\2\2\u018e\u018f"+
		"\7,\2\2\u018f\u0193\3\2\2\2\u0190\u0192\13\2\2\2\u0191\u0190\3\2\2\2\u0192"+
		"\u0195\3\2\2\2\u0193\u0194\3\2\2\2\u0193\u0191\3\2\2\2\u0194\u0196\3\2"+
		"\2\2\u0195\u0193\3\2\2\2\u0196\u0197\7,\2\2\u0197\u0198\7\61\2\2\u0198"+
		"\u0199\3\2\2\2\u0199\u019a\b<\2\2\u019ax\3\2\2\2\u019b\u019c\7\61\2\2"+
		"\u019c\u019d\7\61\2\2\u019d\u01a1\3\2\2\2\u019e\u01a0\n\n\2\2\u019f\u019e"+
		"\3\2\2\2\u01a0\u01a3\3\2\2\2\u01a1\u019f\3\2\2\2\u01a1\u01a2\3\2\2\2\u01a2"+
		"\u01a4\3\2\2\2\u01a3\u01a1\3\2\2\2\u01a4\u01a5\b=\2\2\u01a5z\3\2\2\2\u01a6"+
		"\u01a7\7B\2\2\u01a7\u01a8\7$\2\2\u01a8\u01ae\3\2\2\2\u01a9\u01ad\n\13"+
		"\2\2\u01aa\u01ab\7$\2\2\u01ab\u01ad\7$\2\2\u01ac\u01a9\3\2\2\2\u01ac\u01aa"+
		"\3\2\2\2\u01ad\u01b0\3\2\2\2\u01ae\u01ac\3\2\2\2\u01ae\u01af\3\2\2\2\u01af"+
		"\u01b1\3\2\2\2\u01b0\u01ae\3\2\2\2\u01b1\u01b2\7$\2\2\u01b2|\3\2\2\2\u01b3"+
		"\u01b5\7$\2\2\u01b4\u01b6\5\177@\2\u01b5\u01b4\3\2\2\2\u01b5\u01b6\3\2"+
		"\2\2\u01b6\u01b7\3\2\2\2\u01b7\u01b8\7$\2\2\u01b8~\3\2\2\2\u01b9\u01bb"+
		"\5\u0081A\2\u01ba\u01b9\3\2\2\2\u01bb\u01bc\3\2\2\2\u01bc\u01ba\3\2\2"+
		"\2\u01bc\u01bd\3\2\2\2\u01bd\u0080\3\2\2\2\u01be\u01c7\n\f\2\2\u01bf\u01c0"+
		"\7^\2\2\u01c0\u01c7\t\r\2\2\u01c1\u01c2\7^\2\2\u01c2\u01c7\7\f\2\2\u01c3"+
		"\u01c4\7^\2\2\u01c4\u01c5\7\17\2\2\u01c5\u01c7\7\f\2\2\u01c6\u01be\3\2"+
		"\2\2\u01c6\u01bf\3\2\2\2\u01c6\u01c1\3\2\2\2\u01c6\u01c3\3\2\2\2\u01c7"+
		"\u0082\3\2\2\2\35\2\u00f1\u0132\u0137\u013c\u0142\u0147\u014d\u0151\u0156"+
		"\u0158\u015b\u0164\u016c\u0170\u0172\u0178\u017f\u0184\u0189\u0193\u01a1"+
		"\u01ac\u01ae\u01b5\u01bc\u01c6\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}