// Generated from Eugine.g by ANTLR 4.5.3

package org.coyove.eugine.antlr;

import org.coyove.eugine.util.*;
import org.coyove.eugine.base.*;
import org.coyove.eugine.value.*;
import org.coyove.eugine.core.*;
import org.coyove.eugine.library.*;
import org.coyove.eugine.parser.Atom;
import java.util.HashMap;
import org.apache.commons.lang3.ClassUtils;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class EugineLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, Var=35, Const=36, Def=37, For=38, If=39, 
		Switch=40, Else=41, Enter=42, Catch=43, Clone=44, New=45, Static=46, Do=47, 
		Add=48, Sub=49, Not=50, AryOp=51, Integer=52, Double=53, NEWLINE=54, WS=55, 
		Semi=56, Identifier=57, JavaFullName=58, Letter=59, BlockComment=60, LineComment=61, 
		RawString=62, StringLiteral=63;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "Var", "Const", "Def", "For", "If", "Switch", "Else", "Enter", 
		"Catch", "Clone", "New", "Static", "Do", "Add", "Sub", "Not", "AryOp", 
		"Integer", "Double", "NEWLINE", "WS", "Semi", "Identifier", "JavaFullName", 
		"Letter", "BlockComment", "LineComment", "RawString", "StringLiteral", 
		"SCharSequence", "SChar"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'{'", "'}'", "'import'", "'.'", "'('", "')'", "'='", "','", "':'", 
		"'['", "']'", "'=>'", "'::'", "'#'", "'..'", "'...'", "'++'", "'--'", 
		"'*'", "'/'", "'%'", "'+.'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", 
		"'&&'", "'||'", "'+='", "'-='", "'*='", "'/='", "'var'", "'const'", "'def'", 
		null, "'if'", "'switch'", "'else'", "'enter'", "'catch'", "'clone'", "'new'", 
		"'static'", "'do'", "'+'", "'-'", "'!'", null, null, null, null, null, 
		"';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, "Var", 
		"Const", "Def", "For", "If", "Switch", "Else", "Enter", "Catch", "Clone", 
		"New", "Static", "Do", "Add", "Sub", "Not", "AryOp", "Integer", "Double", 
		"NEWLINE", "WS", "Semi", "Identifier", "JavaFullName", "Letter", "BlockComment", 
		"LineComment", "RawString", "StringLiteral"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public EugineLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Eugine.g"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2A\u01cc\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4"+
		"\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f"+
		"\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3"+
		"\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3"+
		"\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3"+
		"\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3\""+
		"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\5\'\u00f6\n\'\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3"+
		"*\3*\3*\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3.\3.\3"+
		".\3.\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63"+
		"\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\5\64\u0137\n\64\3\65"+
		"\6\65\u013a\n\65\r\65\16\65\u013b\3\66\6\66\u013f\n\66\r\66\16\66\u0140"+
		"\3\66\3\66\6\66\u0145\n\66\r\66\16\66\u0146\3\66\6\66\u014a\n\66\r\66"+
		"\16\66\u014b\3\66\3\66\6\66\u0150\n\66\r\66\16\66\u0151\3\66\3\66\5\66"+
		"\u0156\n\66\3\66\6\66\u0159\n\66\r\66\16\66\u015a\5\66\u015d\n\66\3\67"+
		"\5\67\u0160\n\67\3\67\3\67\3\67\3\67\38\68\u0167\n8\r8\168\u0168\38\3"+
		"8\39\39\3:\3:\5:\u0171\n:\3:\3:\7:\u0175\n:\f:\16:\u0178\13:\3:\3:\3:"+
		"\5:\u017d\n:\3;\3;\3;\7;\u0182\n;\f;\16;\u0185\13;\3;\3;\5;\u0189\n;\3"+
		";\3;\3;\5;\u018e\n;\3<\3<\3=\3=\3=\3=\7=\u0196\n=\f=\16=\u0199\13=\3="+
		"\3=\3=\3=\3=\3>\3>\3>\3>\7>\u01a4\n>\f>\16>\u01a7\13>\3>\3>\3?\3?\3?\3"+
		"?\3?\3?\7?\u01b1\n?\f?\16?\u01b4\13?\3?\3?\3@\3@\5@\u01ba\n@\3@\3@\3A"+
		"\6A\u01bf\nA\rA\16A\u01c0\3B\3B\3B\3B\3B\3B\3B\3B\5B\u01cb\nB\3\u0197"+
		"\2C\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67"+
		"m8o9q:s;u<w=y>{?}@\177A\u0081\2\u0083\2\3\2\16\6\2\'\',,//\61\61\4\2>"+
		">@@\3\2\62;\4\2GGgg\5\2--//^^\4\2\13\13\"\"\4\2\62;aa\4\2C\\c|\4\2\f\f"+
		"\17\17\3\2$$\6\2\f\f\17\17$$^^\f\2$$))AA^^cdhhppttvvxx\u01e9\2\3\3\2\2"+
		"\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3"+
		"\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2"+
		"\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2"+
		"\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2"+
		"\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3"+
		"\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2"+
		"\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2"+
		"W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3"+
		"\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2"+
		"\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2"+
		"}\3\2\2\2\2\177\3\2\2\2\3\u0085\3\2\2\2\5\u0087\3\2\2\2\7\u0089\3\2\2"+
		"\2\t\u0090\3\2\2\2\13\u0092\3\2\2\2\r\u0094\3\2\2\2\17\u0096\3\2\2\2\21"+
		"\u0098\3\2\2\2\23\u009a\3\2\2\2\25\u009c\3\2\2\2\27\u009e\3\2\2\2\31\u00a0"+
		"\3\2\2\2\33\u00a3\3\2\2\2\35\u00a6\3\2\2\2\37\u00a8\3\2\2\2!\u00ab\3\2"+
		"\2\2#\u00af\3\2\2\2%\u00b2\3\2\2\2\'\u00b5\3\2\2\2)\u00b7\3\2\2\2+\u00b9"+
		"\3\2\2\2-\u00bb\3\2\2\2/\u00be\3\2\2\2\61\u00c0\3\2\2\2\63\u00c2\3\2\2"+
		"\2\65\u00c5\3\2\2\2\67\u00c8\3\2\2\29\u00cb\3\2\2\2;\u00ce\3\2\2\2=\u00d1"+
		"\3\2\2\2?\u00d4\3\2\2\2A\u00d7\3\2\2\2C\u00da\3\2\2\2E\u00dd\3\2\2\2G"+
		"\u00e0\3\2\2\2I\u00e4\3\2\2\2K\u00ea\3\2\2\2M\u00f5\3\2\2\2O\u00f7\3\2"+
		"\2\2Q\u00fa\3\2\2\2S\u0101\3\2\2\2U\u0106\3\2\2\2W\u010c\3\2\2\2Y\u0112"+
		"\3\2\2\2[\u0118\3\2\2\2]\u011c\3\2\2\2_\u0123\3\2\2\2a\u0126\3\2\2\2c"+
		"\u0128\3\2\2\2e\u012a\3\2\2\2g\u0136\3\2\2\2i\u0139\3\2\2\2k\u015c\3\2"+
		"\2\2m\u015f\3\2\2\2o\u0166\3\2\2\2q\u016c\3\2\2\2s\u0170\3\2\2\2u\u017e"+
		"\3\2\2\2w\u018f\3\2\2\2y\u0191\3\2\2\2{\u019f\3\2\2\2}\u01aa\3\2\2\2\177"+
		"\u01b7\3\2\2\2\u0081\u01be\3\2\2\2\u0083\u01ca\3\2\2\2\u0085\u0086\7}"+
		"\2\2\u0086\4\3\2\2\2\u0087\u0088\7\177\2\2\u0088\6\3\2\2\2\u0089\u008a"+
		"\7k\2\2\u008a\u008b\7o\2\2\u008b\u008c\7r\2\2\u008c\u008d\7q\2\2\u008d"+
		"\u008e\7t\2\2\u008e\u008f\7v\2\2\u008f\b\3\2\2\2\u0090\u0091\7\60\2\2"+
		"\u0091\n\3\2\2\2\u0092\u0093\7*\2\2\u0093\f\3\2\2\2\u0094\u0095\7+\2\2"+
		"\u0095\16\3\2\2\2\u0096\u0097\7?\2\2\u0097\20\3\2\2\2\u0098\u0099\7.\2"+
		"\2\u0099\22\3\2\2\2\u009a\u009b\7<\2\2\u009b\24\3\2\2\2\u009c\u009d\7"+
		"]\2\2\u009d\26\3\2\2\2\u009e\u009f\7_\2\2\u009f\30\3\2\2\2\u00a0\u00a1"+
		"\7?\2\2\u00a1\u00a2\7@\2\2\u00a2\32\3\2\2\2\u00a3\u00a4\7<\2\2\u00a4\u00a5"+
		"\7<\2\2\u00a5\34\3\2\2\2\u00a6\u00a7\7%\2\2\u00a7\36\3\2\2\2\u00a8\u00a9"+
		"\7\60\2\2\u00a9\u00aa\7\60\2\2\u00aa \3\2\2\2\u00ab\u00ac\7\60\2\2\u00ac"+
		"\u00ad\7\60\2\2\u00ad\u00ae\7\60\2\2\u00ae\"\3\2\2\2\u00af\u00b0\7-\2"+
		"\2\u00b0\u00b1\7-\2\2\u00b1$\3\2\2\2\u00b2\u00b3\7/\2\2\u00b3\u00b4\7"+
		"/\2\2\u00b4&\3\2\2\2\u00b5\u00b6\7,\2\2\u00b6(\3\2\2\2\u00b7\u00b8\7\61"+
		"\2\2\u00b8*\3\2\2\2\u00b9\u00ba\7\'\2\2\u00ba,\3\2\2\2\u00bb\u00bc\7-"+
		"\2\2\u00bc\u00bd\7\60\2\2\u00bd.\3\2\2\2\u00be\u00bf\7>\2\2\u00bf\60\3"+
		"\2\2\2\u00c0\u00c1\7@\2\2\u00c1\62\3\2\2\2\u00c2\u00c3\7>\2\2\u00c3\u00c4"+
		"\7?\2\2\u00c4\64\3\2\2\2\u00c5\u00c6\7@\2\2\u00c6\u00c7\7?\2\2\u00c7\66"+
		"\3\2\2\2\u00c8\u00c9\7?\2\2\u00c9\u00ca\7?\2\2\u00ca8\3\2\2\2\u00cb\u00cc"+
		"\7#\2\2\u00cc\u00cd\7?\2\2\u00cd:\3\2\2\2\u00ce\u00cf\7(\2\2\u00cf\u00d0"+
		"\7(\2\2\u00d0<\3\2\2\2\u00d1\u00d2\7~\2\2\u00d2\u00d3\7~\2\2\u00d3>\3"+
		"\2\2\2\u00d4\u00d5\7-\2\2\u00d5\u00d6\7?\2\2\u00d6@\3\2\2\2\u00d7\u00d8"+
		"\7/\2\2\u00d8\u00d9\7?\2\2\u00d9B\3\2\2\2\u00da\u00db\7,\2\2\u00db\u00dc"+
		"\7?\2\2\u00dcD\3\2\2\2\u00dd\u00de\7\61\2\2\u00de\u00df\7?\2\2\u00dfF"+
		"\3\2\2\2\u00e0\u00e1\7x\2\2\u00e1\u00e2\7c\2\2\u00e2\u00e3\7t\2\2\u00e3"+
		"H\3\2\2\2\u00e4\u00e5\7e\2\2\u00e5\u00e6\7q\2\2\u00e6\u00e7\7p\2\2\u00e7"+
		"\u00e8\7u\2\2\u00e8\u00e9\7v\2\2\u00e9J\3\2\2\2\u00ea\u00eb\7f\2\2\u00eb"+
		"\u00ec\7g\2\2\u00ec\u00ed\7h\2\2\u00edL\3\2\2\2\u00ee\u00ef\7h\2\2\u00ef"+
		"\u00f0\7q\2\2\u00f0\u00f6\7t\2\2\u00f1\u00f2\7h\2\2\u00f2\u00f3\7q\2\2"+
		"\u00f3\u00f4\7t\2\2\u00f4\u00f6\7t\2\2\u00f5\u00ee\3\2\2\2\u00f5\u00f1"+
		"\3\2\2\2\u00f6N\3\2\2\2\u00f7\u00f8\7k\2\2\u00f8\u00f9\7h\2\2\u00f9P\3"+
		"\2\2\2\u00fa\u00fb\7u\2\2\u00fb\u00fc\7y\2\2\u00fc\u00fd\7k\2\2\u00fd"+
		"\u00fe\7v\2\2\u00fe\u00ff\7e\2\2\u00ff\u0100\7j\2\2\u0100R\3\2\2\2\u0101"+
		"\u0102\7g\2\2\u0102\u0103\7n\2\2\u0103\u0104\7u\2\2\u0104\u0105\7g\2\2"+
		"\u0105T\3\2\2\2\u0106\u0107\7g\2\2\u0107\u0108\7p\2\2\u0108\u0109\7v\2"+
		"\2\u0109\u010a\7g\2\2\u010a\u010b\7t\2\2\u010bV\3\2\2\2\u010c\u010d\7"+
		"e\2\2\u010d\u010e\7c\2\2\u010e\u010f\7v\2\2\u010f\u0110\7e\2\2\u0110\u0111"+
		"\7j\2\2\u0111X\3\2\2\2\u0112\u0113\7e\2\2\u0113\u0114\7n\2\2\u0114\u0115"+
		"\7q\2\2\u0115\u0116\7p\2\2\u0116\u0117\7g\2\2\u0117Z\3\2\2\2\u0118\u0119"+
		"\7p\2\2\u0119\u011a\7g\2\2\u011a\u011b\7y\2\2\u011b\\\3\2\2\2\u011c\u011d"+
		"\7u\2\2\u011d\u011e\7v\2\2\u011e\u011f\7c\2\2\u011f\u0120\7v\2\2\u0120"+
		"\u0121\7k\2\2\u0121\u0122\7e\2\2\u0122^\3\2\2\2\u0123\u0124\7f\2\2\u0124"+
		"\u0125\7q\2\2\u0125`\3\2\2\2\u0126\u0127\7-\2\2\u0127b\3\2\2\2\u0128\u0129"+
		"\7/\2\2\u0129d\3\2\2\2\u012a\u012b\7#\2\2\u012bf\3\2\2\2\u012c\u0137\t"+
		"\2\2\2\u012d\u012e\7?\2\2\u012e\u0137\7?\2\2\u012f\u0130\7#\2\2\u0130"+
		"\u0137\7?\2\2\u0131\u0137\t\3\2\2\u0132\u0133\7@\2\2\u0133\u0137\7?\2"+
		"\2\u0134\u0135\7>\2\2\u0135\u0137\7?\2\2\u0136\u012c\3\2\2\2\u0136\u012d"+
		"\3\2\2\2\u0136\u012f\3\2\2\2\u0136\u0131\3\2\2\2\u0136\u0132\3\2\2\2\u0136"+
		"\u0134\3\2\2\2\u0137h\3\2\2\2\u0138\u013a\t\4\2\2\u0139\u0138\3\2\2\2"+
		"\u013a\u013b\3\2\2\2\u013b\u0139\3\2\2\2\u013b\u013c\3\2\2\2\u013cj\3"+
		"\2\2\2\u013d\u013f\t\4\2\2\u013e\u013d\3\2\2\2\u013f\u0140\3\2\2\2\u0140"+
		"\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u0142\3\2\2\2\u0142\u0144\7\60"+
		"\2\2\u0143\u0145\t\4\2\2\u0144\u0143\3\2\2\2\u0145\u0146\3\2\2\2\u0146"+
		"\u0144\3\2\2\2\u0146\u0147\3\2\2\2\u0147\u015d\3\2\2\2\u0148\u014a\t\4"+
		"\2\2\u0149\u0148\3\2\2\2\u014a\u014b\3\2\2\2\u014b\u0149\3\2\2\2\u014b"+
		"\u014c\3\2\2\2\u014c\u014d\3\2\2\2\u014d\u014f\7\60\2\2\u014e\u0150\t"+
		"\4\2\2\u014f\u014e\3\2\2\2\u0150\u0151\3\2\2\2\u0151\u014f\3\2\2\2\u0151"+
		"\u0152\3\2\2\2\u0152\u0153\3\2\2\2\u0153\u0155\t\5\2\2\u0154\u0156\t\6"+
		"\2\2\u0155\u0154\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0158\3\2\2\2\u0157"+
		"\u0159\t\4\2\2\u0158\u0157\3\2\2\2\u0159\u015a\3\2\2\2\u015a\u0158\3\2"+
		"\2\2\u015a\u015b\3\2\2\2\u015b\u015d\3\2\2\2\u015c\u013e\3\2\2\2\u015c"+
		"\u0149\3\2\2\2\u015dl\3\2\2\2\u015e\u0160\7\17\2\2\u015f\u015e\3\2\2\2"+
		"\u015f\u0160\3\2\2\2\u0160\u0161\3\2\2\2\u0161\u0162\7\f\2\2\u0162\u0163"+
		"\3\2\2\2\u0163\u0164\b\67\2\2\u0164n\3\2\2\2\u0165\u0167\t\7\2\2\u0166"+
		"\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168\u0166\3\2\2\2\u0168\u0169\3\2"+
		"\2\2\u0169\u016a\3\2\2\2\u016a\u016b\b8\2\2\u016bp\3\2\2\2\u016c\u016d"+
		"\7=\2\2\u016dr\3\2\2\2\u016e\u0171\5w<\2\u016f\u0171\7a\2\2\u0170\u016e"+
		"\3\2\2\2\u0170\u016f\3\2\2\2\u0171\u0176\3\2\2\2\u0172\u0175\5w<\2\u0173"+
		"\u0175\t\b\2\2\u0174\u0172\3\2\2\2\u0174\u0173\3\2\2\2\u0175\u0178\3\2"+
		"\2\2\u0176\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u017c\3\2\2\2\u0178"+
		"\u0176\3\2\2\2\u0179\u017a\7\60\2\2\u017a\u017b\7\60\2\2\u017b\u017d\7"+
		"\60\2\2\u017c\u0179\3\2\2\2\u017c\u017d\3\2\2\2\u017dt\3\2\2\2\u017e\u0183"+
		"\5s:\2\u017f\u0180\7^\2\2\u0180\u0182\5s:\2\u0181\u017f\3\2\2\2\u0182"+
		"\u0185\3\2\2\2\u0183\u0181\3\2\2\2\u0183\u0184\3\2\2\2\u0184\u0188\3\2"+
		"\2\2\u0185\u0183\3\2\2\2\u0186\u0187\7]\2\2\u0187\u0189\7_\2\2\u0188\u0186"+
		"\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u018d\3\2\2\2\u018a\u018b\7\60\2\2"+
		"\u018b\u018c\7\60\2\2\u018c\u018e\7\60\2\2\u018d\u018a\3\2\2\2\u018d\u018e"+
		"\3\2\2\2\u018ev\3\2\2\2\u018f\u0190\t\t\2\2\u0190x\3\2\2\2\u0191\u0192"+
		"\7\61\2\2\u0192\u0193\7,\2\2\u0193\u0197\3\2\2\2\u0194\u0196\13\2\2\2"+
		"\u0195\u0194\3\2\2\2\u0196\u0199\3\2\2\2\u0197\u0198\3\2\2\2\u0197\u0195"+
		"\3\2\2\2\u0198\u019a\3\2\2\2\u0199\u0197\3\2\2\2\u019a\u019b\7,\2\2\u019b"+
		"\u019c\7\61\2\2\u019c\u019d\3\2\2\2\u019d\u019e\b=\2\2\u019ez\3\2\2\2"+
		"\u019f\u01a0\7\61\2\2\u01a0\u01a1\7\61\2\2\u01a1\u01a5\3\2\2\2\u01a2\u01a4"+
		"\n\n\2\2\u01a3\u01a2\3\2\2\2\u01a4\u01a7\3\2\2\2\u01a5\u01a3\3\2\2\2\u01a5"+
		"\u01a6\3\2\2\2\u01a6\u01a8\3\2\2\2\u01a7\u01a5\3\2\2\2\u01a8\u01a9\b>"+
		"\2\2\u01a9|\3\2\2\2\u01aa\u01ab\7B\2\2\u01ab\u01ac\7$\2\2\u01ac\u01b2"+
		"\3\2\2\2\u01ad\u01b1\n\13\2\2\u01ae\u01af\7$\2\2\u01af\u01b1\7$\2\2\u01b0"+
		"\u01ad\3\2\2\2\u01b0\u01ae\3\2\2\2\u01b1\u01b4\3\2\2\2\u01b2\u01b0\3\2"+
		"\2\2\u01b2\u01b3\3\2\2\2\u01b3\u01b5\3\2\2\2\u01b4\u01b2\3\2\2\2\u01b5"+
		"\u01b6\7$\2\2\u01b6~\3\2\2\2\u01b7\u01b9\7$\2\2\u01b8\u01ba\5\u0081A\2"+
		"\u01b9\u01b8\3\2\2\2\u01b9\u01ba\3\2\2\2\u01ba\u01bb\3\2\2\2\u01bb\u01bc"+
		"\7$\2\2\u01bc\u0080\3\2\2\2\u01bd\u01bf\5\u0083B\2\u01be\u01bd\3\2\2\2"+
		"\u01bf\u01c0\3\2\2\2\u01c0\u01be\3\2\2\2\u01c0\u01c1\3\2\2\2\u01c1\u0082"+
		"\3\2\2\2\u01c2\u01cb\n\f\2\2\u01c3\u01c4\7^\2\2\u01c4\u01cb\t\r\2\2\u01c5"+
		"\u01c6\7^\2\2\u01c6\u01cb\7\f\2\2\u01c7\u01c8\7^\2\2\u01c8\u01c9\7\17"+
		"\2\2\u01c9\u01cb\7\f\2\2\u01ca\u01c2\3\2\2\2\u01ca\u01c3\3\2\2\2\u01ca"+
		"\u01c5\3\2\2\2\u01ca\u01c7\3\2\2\2\u01cb\u0084\3\2\2\2\35\2\u00f5\u0136"+
		"\u013b\u0140\u0146\u014b\u0151\u0155\u015a\u015c\u015f\u0168\u0170\u0174"+
		"\u0176\u017c\u0183\u0188\u018d\u0197\u01a5\u01b0\u01b2\u01b9\u01c0\u01ca"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}